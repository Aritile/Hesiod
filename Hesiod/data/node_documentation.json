{
    "Abs": {
        "attributes": {
            "vshift": {
                "description": "TODO",
                "key": "vshift",
                "label": "vshift",
                "type": "Float"
            }
        },
        "category": "Math/Base",
        "description": "Apply an absolute function to every values.",
        "label": "Abs",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "AbsSmooth": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "mu": {
                "description": "TODO",
                "key": "mu",
                "label": "mu",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "vshift": {
                "description": "TODO",
                "key": "vshift",
                "label": "vshift",
                "type": "Float"
            }
        },
        "category": "Math/Base",
        "description": "Apply a smooth absolute value function to every values. The smooth absolute operator computes the absolute value of an input while providing a smooth transition around zero, ensuring continuity and smoothness in the output.",
        "label": "AbsSmooth",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "AccumulationCurvature": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Features/Landform",
        "description": "AccumulationCurvature is a specific type of curvature reflecting how the shape of the heightmap influences the accumulation of water. Positive accumulation curvature indicates converging flow, where water tends to accumulate and concentrate, often leading to the formation of channels or gullies. Negative accumulation curvature suggests diverging flow, where water is dispersed over a broader area, which is typical of ridges or hilltops.",
        "label": "AccumulationCurvature",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Accumulation curvature.",
                "type": "output"
            }
        }
    },
    "Blend": {
        "attributes": {
            "blending_method": {
                "description": "TODO",
                "key": "blending_method",
                "label": "blending_method",
                "type": "Enumeration"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "k": {
                "description": "TODO",
                "key": "k",
                "label": "k",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Operator/Blend",
        "description": "The Blend operator takes two input heightmaps.",
        "label": "Blend",
        "ports": {
            "input 1": {
                "caption": "input 1",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "input 2": {
                "caption": "input 2",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "Brush": {
        "attributes": {
            "hmap": {
                "description": "TODO",
                "key": "hmap",
                "label": "Heightmap",
                "type": "Array"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "Inverse",
                "type": "Bool"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "Remap range",
                "type": "Value range"
            }
        },
        "category": "Primitive/Authoring",
        "description": "TODO",
        "label": "Brush",
        "ports": {
            "out": {
                "caption": "out",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Bump": {
        "attributes": {
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "gain": {
                "description": "TODO",
                "key": "gain",
                "label": "gain",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Primitive/Function",
        "description": "Bump generates a smooth transitions between zero-valued boundaries and the center of the domain.",
        "label": "Bump",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Bump heightmap.",
                "type": "output"
            }
        }
    },
    "Caldera": {
        "attributes": {
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "noise_r_amp": {
                "description": "TODO",
                "key": "noise_r_amp",
                "label": "noise_r_amp",
                "type": "Float"
            },
            "noise_ratio_z": {
                "description": "TODO",
                "key": "noise_ratio_z",
                "label": "noise_ratio_z",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "sigma_inner": {
                "description": "TODO",
                "key": "sigma_inner",
                "label": "sigma_inner",
                "type": "Float"
            },
            "sigma_outer": {
                "description": "TODO",
                "key": "sigma_outer",
                "label": "sigma_outer",
                "type": "Float"
            },
            "z_bottom": {
                "description": "TODO",
                "key": "z_bottom",
                "label": "z_bottom",
                "type": "Float"
            }
        },
        "category": "Primitive/Geological",
        "description": "Caldera generates a volcanic caldera landscape.",
        "label": "Caldera",
        "ports": {
            "dr": {
                "caption": "dr",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (normal direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Caldera heightmap.",
                "type": "output"
            }
        }
    },
    "Clamp": {
        "attributes": {
            "clamp": {
                "description": "TODO",
                "key": "clamp",
                "label": "clamp",
                "type": "Value range"
            },
            "k_max": {
                "description": "TODO",
                "key": "k_max",
                "label": "k_max",
                "type": "Float"
            },
            "k_min": {
                "description": "TODO",
                "key": "k_min",
                "label": "k_min",
                "type": "Float"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "smooth_max": {
                "description": "TODO",
                "key": "smooth_max",
                "label": "smooth_max",
                "type": "Bool"
            },
            "smooth_min": {
                "description": "TODO",
                "key": "smooth_min",
                "label": "smooth_min",
                "type": "Bool"
            }
        },
        "category": "Filter/Range",
        "description": "Clamp restrict a value within a specified range. Essentially, it ensures that a value does not exceed a defined upper limit or fall below a defined lower limit.",
        "label": "Clamp",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Clamped heightmap.",
                "type": "output"
            }
        }
    },
    "Closing": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Operator/Morphology",
        "description": "Closing is a combination of dilation followed by erosion. It is primarily used for closing small holes or gaps in objects. Use Cases: Hole filling: Closing can fill small holes or gaps in objects, making them more solid and complete. Connecting broken objects: Closing can help connect broken segments or regions in an image, making objects more continuous.",
        "label": "Closing",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Dilated heightmap.",
                "type": "output"
            }
        }
    },
    "Cloud": {
        "attributes": {
            "cloud": {
                "description": "TODO",
                "key": "cloud",
                "label": "Cloud",
                "type": "Cloud"
            }
        },
        "category": "Geometry/Cloud",
        "description": "Set of points.",
        "label": "Cloud",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Set of points (x, y) and elevations z.",
                "type": "output"
            }
        }
    },
    "CloudLattice": {
        "attributes": {
            "delta": {
                "description": "TODO",
                "key": "delta",
                "label": "delta",
                "type": "Wavenumber"
            },
            "jitter_ratio": {
                "description": "TODO",
                "key": "jitter_ratio",
                "label": "jitter_ratio",
                "type": "Wavenumber"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "stagger_ratio": {
                "description": "TODO",
                "key": "stagger_ratio",
                "label": "stagger_ratio",
                "type": "Wavenumber"
            }
        },
        "category": "Geometry/Cloud",
        "description": "Generate a grid lattice set of points.",
        "label": "CloudLattice",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Set of points (x, y) and elevations z.",
                "type": "output"
            }
        }
    },
    "CloudMerge": {
        "category": "Geometry/Cloud",
        "description": "CloudMerge merges two clouds into a single one.",
        "label": "CloudMerge",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Merged cloud.",
                "type": "output"
            },
            "cloud1": {
                "caption": "cloud1",
                "data_type": "Cloud",
                "description": "Input cloud.",
                "type": "input"
            },
            "cloud2": {
                "caption": "cloud2",
                "data_type": "Cloud",
                "description": "Input cloud.",
                "type": "input"
            }
        }
    },
    "CloudRandom": {
        "attributes": {
            "npoints": {
                "description": "TODO",
                "key": "npoints",
                "label": "npoints",
                "type": "Integer"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Geometry/Cloud",
        "description": "Random set of points.",
        "label": "CloudRandom",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Set of points (x, y) and elevations z.",
                "type": "output"
            }
        }
    },
    "CloudRemapValues": {
        "attributes": {
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Geometry/Cloud",
        "description": "CloudRemapValues remap the range of the cloud point values.",
        "label": "CloudRemapValues",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Cloud",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Cloud",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "CloudSDF": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            }
        },
        "category": "Geometry/Cloud",
        "description": "CloudSDF evaluates the signed distance function of a set of points. It assigns a signed distance value to every point in space.",
        "label": "CloudSDF",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Input cloud.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "sdf": {
                "caption": "sdf",
                "data_type": "Heightmap",
                "description": "Signed distance as an heightmap.",
                "type": "output"
            }
        }
    },
    "CloudToArrayInterp": {
        "category": "Geometry/Cloud",
        "description": "CloudToArrayInterp generates a smooth and continuous 2D elevation map from a set of scattered points using Delaunay linear interpolation.",
        "label": "CloudToArrayInterp",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Set of points (x, y) and elevations z.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "heightmap": {
                "caption": "heightmap",
                "data_type": "Heightmap",
                "description": "Interpolated heightmap.",
                "type": "output"
            }
        }
    },
    "CloudToPath": {
        "attributes": {
            "closed": {
                "description": "TODO",
                "key": "closed",
                "label": "closed",
                "type": "Bool"
            },
            "reorder_nns": {
                "description": "TODO",
                "key": "reorder_nns",
                "label": "reorder_nns",
                "type": "Bool"
            }
        },
        "category": "Geometry/Cloud",
        "description": "CloudToPath convert a Cloud to a Path.",
        "label": "CloudToPath",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Input cloud.",
                "type": "input"
            },
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "Output path.",
                "type": "output"
            }
        }
    },
    "ColorizeCmap": {
        "attributes": {
            "clamp_alpha": {
                "description": "TODO",
                "key": "clamp_alpha",
                "label": "clamp_alpha",
                "type": "Bool"
            },
            "colormap": {
                "description": "TODO",
                "key": "colormap",
                "label": "colormap",
                "type": "Enumeration"
            },
            "reverse_alpha": {
                "description": "TODO",
                "key": "reverse_alpha",
                "label": "reverse_alpha",
                "type": "Bool"
            },
            "reverse_colormap": {
                "description": "TODO",
                "key": "reverse_colormap",
                "label": "reverse_colormap",
                "type": "Bool"
            },
            "saturate_alpha": {
                "description": "TODO",
                "key": "saturate_alpha",
                "label": "saturate_alpha",
                "type": "Value range"
            },
            "saturate_input": {
                "description": "TODO",
                "key": "saturate_input",
                "label": "saturate_input",
                "type": "Value range"
            }
        },
        "category": "Texture",
        "description": "ColorizeCmap generates a texture based on colormaps to assign colors to data values.",
        "label": "ColorizeCmap",
        "ports": {
            "alpha": {
                "caption": "alpha",
                "data_type": "Heightmap",
                "description": "Texture alpha map.",
                "type": "input"
            },
            "level": {
                "caption": "level",
                "data_type": "Heightmap",
                "description": "Data values for color selection.",
                "type": "input"
            },
            "noise": {
                "caption": "noise",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "Texture (RGBA).",
                "type": "output"
            }
        }
    },
    "ColorizeGradient": {
        "attributes": {
            "clamp_alpha": {
                "description": "TODO",
                "key": "clamp_alpha",
                "label": "clamp_alpha",
                "type": "Bool"
            },
            "gradient": {
                "description": "TODO",
                "key": "gradient",
                "label": "gradient",
                "type": "Color gradient"
            },
            "reverse_alpha": {
                "description": "TODO",
                "key": "reverse_alpha",
                "label": "reverse_alpha",
                "type": "Bool"
            },
            "reverse_colormap": {
                "description": "TODO",
                "key": "reverse_colormap",
                "label": "reverse_colormap",
                "type": "Bool"
            }
        },
        "category": "Texture",
        "description": "ColorizeGradient generates a texture based on colormaps to assign colors to data values.",
        "label": "ColorizeGradient",
        "ports": {
            "alpha": {
                "caption": "alpha",
                "data_type": "Heightmap",
                "description": "Texture alpha map.",
                "type": "input"
            },
            "level": {
                "caption": "level",
                "data_type": "Heightmap",
                "description": "Data values for color selection.",
                "type": "input"
            },
            "noise": {
                "caption": "noise",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "Texture (RGBA).",
                "type": "output"
            }
        }
    },
    "ColorizeSolid": {
        "attributes": {
            "alpha": {
                "description": "TODO",
                "key": "alpha",
                "label": "alpha",
                "type": "Float"
            },
            "color": {
                "description": "TODO",
                "key": "color",
                "label": "color",
                "type": "Color"
            }
        },
        "category": "Texture",
        "description": "ColorizeSolid generates an uniform texture based on an input color.",
        "label": "ColorizeSolid",
        "ports": {
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "Texture (RGBA).",
                "type": "output"
            }
        }
    },
    "CombineMask": {
        "attributes": {
            "method": {
                "description": "TODO",
                "key": "method",
                "label": "method",
                "type": "Enumeration"
            }
        },
        "category": "Mask",
        "description": "CombineMask performs basic logical operations on a pair of heightmaps (assuming they are used as masks).",
        "label": "CombineMask",
        "ports": {
            "input 1": {
                "caption": "input 1",
                "data_type": "Heightmap",
                "description": "Input mask.",
                "type": "input"
            },
            "input 2": {
                "caption": "input 2",
                "data_type": "Heightmap",
                "description": "Input mask.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Combined mask.",
                "type": "output"
            }
        }
    },
    "ConvolveSVD": {
        "attributes": {
            "rank": {
                "description": "TODO",
                "key": "rank",
                "label": "rank",
                "type": "Integer"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Math/Convolution",
        "description": "ConvolveSVD performs convolution using a Singular Value Decomposition (SVD) of the kernel to accelerate the process.",
        "label": "ConvolveSVD",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "kernel": {
                "caption": "kernel",
                "data_type": "Array",
                "description": "Convolution kernel.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "Cos": {
        "attributes": {
            "frequency": {
                "description": "TODO",
                "key": "frequency",
                "label": "frequency",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "phase_shift": {
                "description": "TODO",
                "key": "phase_shift",
                "label": "phase_shift",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Math/Base",
        "description": "Apply a cosine function to every values.",
        "label": "Cos",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "Crater": {
        "attributes": {
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "depth": {
                "description": "TODO",
                "key": "depth",
                "label": "depth",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "lip_decay": {
                "description": "TODO",
                "key": "lip_decay",
                "label": "lip_decay",
                "type": "Float"
            },
            "lip_height_ratio": {
                "description": "TODO",
                "key": "lip_height_ratio",
                "label": "lip_height_ratio",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Primitive/Geological",
        "description": "Crater generates a crater landscape..",
        "label": "Crater",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Crater heightmap.",
                "type": "output"
            }
        }
    },
    "Dendry": {
        "attributes": {
            "displacement": {
                "description": "TODO",
                "key": "displacement",
                "label": "displacement",
                "type": "Float"
            },
            "eps": {
                "description": "TODO",
                "key": "eps",
                "label": "eps",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "",
                "type": "Wavenumber"
            },
            "noise_amplitude_proportion": {
                "description": "TODO",
                "key": "noise_amplitude_proportion",
                "label": "noise_amplitude_proportion",
                "type": "Float"
            },
            "primitives_resolution_steps": {
                "description": "TODO",
                "key": "primitives_resolution_steps",
                "label": "primitives_resolution_steps",
                "type": "Integer"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "resolution": {
                "description": "TODO",
                "key": "resolution",
                "label": "resolution",
                "type": "Integer"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "slope_power": {
                "description": "TODO",
                "key": "slope_power",
                "label": "slope_power",
                "type": "Float"
            },
            "subsampling": {
                "description": "TODO",
                "key": "subsampling",
                "label": "subsampling",
                "type": "Integer"
            }
        },
        "category": "Primitive/Coherent",
        "description": "Dendry is a procedural model for dendritic patterns generation.",
        "label": "Dendry",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Global control heightmap that defines the overall shape of the output.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "out": {
                "caption": "out",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "DepressionFilling": {
        "attributes": {
            "epsilon": {
                "description": "TODO",
                "key": "epsilon",
                "label": "epsilon",
                "type": "Float"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "remap fill map": {
                "description": "TODO",
                "key": "remap fill map",
                "label": "remap fill map",
                "type": "Bool"
            }
        },
        "category": "Erosion",
        "description": "DepressionFilling is used to fill depressions or sinks in an heightmap. It ensures that there are no depressions, i.e. areas within a digital elevation model that are surrounded by higher terrain, with no outlet to lower areas.",
        "label": "DepressionFilling",
        "ports": {
            "fill map": {
                "caption": "fill map",
                "data_type": "Heightmap",
                "description": "Filling map.",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filled heightmap.",
                "type": "output"
            }
        }
    },
    "Detrend": {
        "category": "WIP",
        "description": "The Detrend operator is used to adjust the elevation using a very basic (uncorrect) detrending operator.",
        "label": "Detrend",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Detrended heightmap.",
                "type": "output"
            }
        }
    },
    "DiffusionLimitedAggregation": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "noise_ratio": {
                "description": "TODO",
                "key": "noise_ratio",
                "label": "noise_ratio",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "scale": {
                "description": "TODO",
                "key": "scale",
                "label": "scale",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "seeding_outer_radius_ratio": {
                "description": "TODO",
                "key": "seeding_outer_radius_ratio",
                "label": "seeding_outer_radius_ratio",
                "type": "Float"
            },
            "seeding_radius": {
                "description": "TODO",
                "key": "seeding_radius",
                "label": "seeding_radius",
                "type": "Float"
            },
            "slope": {
                "description": "TODO",
                "key": "slope",
                "label": "slope",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "DiffusionLimitedAggregation creates branching, fractal-like structures that resemble the rugged, irregular contours of mountain ranges.",
        "label": "DiffusionLimitedAggregation",
        "ports": {
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "DiffusionLimitedAggregation heightmap.",
                "type": "output"
            }
        }
    },
    "Dilation": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Operator/Morphology",
        "description": "Dilation expands the boundaries of objects in an image and fills in small gaps or holes in those objects. Use Cases: (+) Filling gaps: Dilation can be used to fill small gaps or holes in objects, making them more solid. (+) Merging objects: Dilation can help merge nearby objects or connect broken segments in an image.",
        "label": "Dilation",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Dilated heightmap.",
                "type": "output"
            }
        }
    },
    "DistanceTransform": {
        "attributes": {
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "reverse_input": {
                "description": "TODO",
                "key": "reverse_input",
                "label": "reverse_input",
                "type": "Bool"
            },
            "reverse_output": {
                "description": "TODO",
                "key": "reverse_output",
                "label": "reverse_output",
                "type": "Bool"
            },
            "threshold": {
                "description": "TODO",
                "key": "threshold",
                "label": "threshold",
                "type": "Float"
            },
            "transform_type": {
                "description": "TODO",
                "key": "transform_type",
                "label": "transform_type",
                "type": "Enumeration"
            }
        },
        "category": "Operator/Morphology",
        "description": "DistanceTransform is a distance map or distance image where each pixel's value represents the shortest distance to the nearest non-zero value in the input heightmap.",
        "label": "DistanceTransform",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "Erosion": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Operator/Morphology",
        "description": "Erosion removes small structures or noise from an image, and it also shrinks the boundaries of objects in an image. Use Cases: (+) Noise reduction: Erosion can help remove small, unwanted pixels or noise from the image. (+) Separating objects: Erosion can be used to separate touching or overlapping objects in an image by shrinking their boundaries.",
        "label": "Erosion",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Dilated heightmap.",
                "type": "output"
            }
        }
    },
    "ExpandShrink": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "kernel": {
                "description": "TODO",
                "key": "kernel",
                "label": "kernel",
                "type": "Enumeration"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "shrink": {
                "description": "TODO",
                "key": "shrink",
                "label": "expand",
                "type": "Bool"
            }
        },
        "category": "Filter/Recast",
        "description": "ExpandShrink is a maximum/minimum filter with a weighted kernel. It can be used to enhance or extract features while preserving the essential structure of the heightmap.",
        "label": "ExpandShrink",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "ExportAsset": {
        "attributes": {
            "auto_export": {
                "description": "TODO",
                "key": "auto_export",
                "label": "auto_export",
                "type": "Bool"
            },
            "blending_method": {
                "description": "TODO",
                "key": "blending_method",
                "label": "blending_method",
                "type": "Enumeration"
            },
            "detail_scaling": {
                "description": "TODO",
                "key": "detail_scaling",
                "label": "detail_scaling",
                "type": "Float"
            },
            "elevation_scaling": {
                "description": "TODO",
                "key": "elevation_scaling",
                "label": "elevation_scaling",
                "type": "Float"
            },
            "export_format": {
                "description": "TODO",
                "key": "export_format",
                "label": "export_format",
                "type": "Enumeration"
            },
            "fname": {
                "description": "TODO",
                "key": "fname",
                "label": "fname",
                "type": "Filename"
            },
            "max_error": {
                "description": "TODO",
                "key": "max_error",
                "label": "max_error",
                "type": "Float"
            },
            "mesh_type": {
                "description": "TODO",
                "key": "mesh_type",
                "label": "mesh_type",
                "type": "Enumeration"
            }
        },
        "category": "IO/Files",
        "description": "ExportAsset exporting both the heightmap and texture to a single asset.",
        "label": "ExportAsset",
        "ports": {
            "elevation": {
                "caption": "elevation",
                "data_type": "Heightmap",
                "description": "Data values for elevation.",
                "type": "input"
            },
            "normal map detail": {
                "caption": "normal map detail",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "Data values for color.",
                "type": "input"
            }
        }
    },
    "ExportCloud": {
        "attributes": {
            "auto_export": {
                "description": "TODO",
                "key": "auto_export",
                "label": "auto_export",
                "type": "Bool"
            },
            "fname": {
                "description": "TODO",
                "key": "fname",
                "label": "fname",
                "type": "Filename"
            }
        },
        "category": "IO/Files",
        "description": "ExportCloud is an operator for exporting cloud data to a csv file.",
        "label": "ExportCloud",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Cloud",
                "description": "Input heightmap.",
                "type": "input"
            }
        }
    },
    "ExportHeightmap": {
        "attributes": {
            "auto_export": {
                "description": "TODO",
                "key": "auto_export",
                "label": "Automatic export",
                "type": "Bool"
            },
            "fname": {
                "description": "TODO",
                "key": "fname",
                "label": "Filename",
                "type": "Filename"
            },
            "format": {
                "description": "TODO",
                "key": "format",
                "label": "Export format",
                "type": "Enumeration"
            }
        },
        "category": "IO/Files",
        "description": "ExportHeightmap is an operator for exporting a heightmap in various file formats.",
        "label": "ExportHeightmap",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            }
        }
    },
    "ExportNormalMap": {
        "attributes": {
            "16bit": {
                "description": "TODO",
                "key": "16bit",
                "label": "16bit",
                "type": "Bool"
            },
            "auto_export": {
                "description": "TODO",
                "key": "auto_export",
                "label": "auto_export",
                "type": "Bool"
            },
            "fname": {
                "description": "TODO",
                "key": "fname",
                "label": "fname",
                "type": "Filename"
            }
        },
        "category": "IO/Files",
        "description": "ExportNormalMap is an operator for exporting the normal map of an heightmap as a PNG image file.",
        "label": "ExportNormalMap",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            }
        }
    },
    "ExportPath": {
        "attributes": {
            "auto_export": {
                "description": "TODO",
                "key": "auto_export",
                "label": "auto_export",
                "type": "Bool"
            },
            "fname": {
                "description": "TODO",
                "key": "fname",
                "label": "fname",
                "type": "Filename"
            }
        },
        "category": "IO/Files",
        "description": "ExportPath is an operator for exporting path data to a csv file.",
        "label": "ExportPath",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "Input heightmap.",
                "type": "input"
            }
        }
    },
    "ExportTexture": {
        "attributes": {
            "16 bit": {
                "description": "TODO",
                "key": "16 bit",
                "label": "16 bit",
                "type": "Bool"
            },
            "auto_export": {
                "description": "TODO",
                "key": "auto_export",
                "label": "auto_export",
                "type": "Bool"
            },
            "fname": {
                "description": "TODO",
                "key": "fname",
                "label": "fname",
                "type": "Filename"
            }
        },
        "category": "IO/Files",
        "description": "ExportTexture is a texture to a PNG image file.",
        "label": "ExportTexture",
        "ports": {
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "Input texture.",
                "type": "input"
            }
        }
    },
    "Falloff": {
        "attributes": {
            "distance_function": {
                "description": "TODO",
                "key": "distance_function",
                "label": "distance_function",
                "type": "Enumeration"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "strength": {
                "description": "TODO",
                "key": "strength",
                "label": "strength",
                "type": "Float"
            }
        },
        "category": "Math/Boundaries",
        "description": "Falloff is an operator that enforces values close to zero at the domain edges.",
        "label": "Falloff",
        "ports": {
            "dr": {
                "caption": "dr",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (radial direction).",
                "type": "input"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "FillTalus": {
        "attributes": {
            "noise_ratio": {
                "description": "TODO",
                "key": "noise_ratio",
                "label": "noise_ratio",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "slope": {
                "description": "TODO",
                "key": "slope",
                "label": "slope",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "Fill the heightmap starting from the highest elevations using a regular downslope.",
        "label": "FillTalus",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "FlowStream": {
        "attributes": {
            "depth": {
                "description": "TODO",
                "key": "depth",
                "label": "depth",
                "type": "Float"
            },
            "distance_exponent": {
                "description": "TODO",
                "key": "distance_exponent",
                "label": "distance_exponent",
                "type": "Float"
            },
            "elevation_ratio": {
                "description": "TODO",
                "key": "elevation_ratio",
                "label": "elevation_ratio",
                "type": "Float"
            },
            "merging_radius": {
                "description": "TODO",
                "key": "merging_radius",
                "label": "merging_radius",
                "type": "Float"
            },
            "noise_ratio": {
                "description": "TODO",
                "key": "noise_ratio",
                "label": "noise_ratio",
                "type": "Float"
            },
            "river_radius": {
                "description": "TODO",
                "key": "river_radius",
                "label": "river_radius",
                "type": "Float"
            },
            "riverbank_slope": {
                "description": "TODO",
                "key": "riverbank_slope",
                "label": "riverbank_slope",
                "type": "Float"
            },
            "riverbed_slope": {
                "description": "TODO",
                "key": "riverbed_slope",
                "label": "riverbed_slope",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "upward_penalization": {
                "description": "TODO",
                "key": "upward_penalization",
                "label": "upward_penalization",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "FlowStream",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "river_mask": {
                "caption": "river_mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "sources": {
                "caption": "sources",
                "data_type": "Cloud",
                "description": "TODO",
                "type": "input"
            }
        }
    },
    "Fold": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "k": {
                "description": "TODO",
                "key": "k",
                "label": "k",
                "type": "Float"
            }
        },
        "category": "Filter/Recast",
        "description": "Fold iteratively applies the absolute value function to the input field, effectively folding negative values to their positive counterparts.",
        "label": "Fold",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Folded heightmap.",
                "type": "output"
            }
        }
    },
    "GaborWaveFbm": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "angle_spread_ratio": {
                "description": "TODO",
                "key": "angle_spread_ratio",
                "label": "angle_spread_ratio",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "Inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "Lacunarity",
                "type": "Float"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "Octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "Persistence",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "Remap range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "Weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "TODO",
        "label": "GaborWaveFbm",
        "ports": {
            "angle": {
                "caption": "angle",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Gain": {
        "attributes": {
            "gain": {
                "description": "TODO",
                "key": "gain",
                "label": "gain",
                "type": "Float"
            }
        },
        "category": "Filter/Recurve",
        "description": "Gain is a power law transformation altering the distribution of signal values, compressing or expanding certain regions of the signal depending on the exponent of the power law.",
        "label": "Gain",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "GammaCorrection": {
        "attributes": {
            "gamma": {
                "description": "TODO",
                "key": "gamma",
                "label": "Gamma",
                "type": "Float"
            }
        },
        "category": "Filter/Recurve",
        "description": "Gamma correction involves applying a nonlinear transformation to the pixel values of the heightmap. This transformation is based on a power-law function, where each pixel value is raised to the power of the gamma value. The gamma value is a parameter that determines the degree and direction of the correction.",
        "label": "GammaCorrection",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "GammaCorrectionLocal": {
        "attributes": {
            "gamma": {
                "description": "TODO",
                "key": "gamma",
                "label": "gamma",
                "type": "Float"
            },
            "k": {
                "description": "TODO",
                "key": "k",
                "label": "k",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Filter/Recurve",
        "description": "Gamma correction involves applying a nonlinear transformation to the pixel values of the heightmap. For GammaCorrectionLocal, the transformation parameters are locally defined within a perimeter 'radius'.",
        "label": "GammaCorrectionLocal",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "GaussianDecay": {
        "attributes": {
            "sigma": {
                "description": "TODO",
                "key": "sigma",
                "label": "sigma",
                "type": "Float"
            }
        },
        "category": "Math/Base",
        "description": "Apply a Gaussian function to every values.",
        "label": "GaussianDecay",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "GaussianPulse": {
        "attributes": {
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Primitive/Function",
        "description": "GaussianPulse generates a Gaussian pulse.",
        "label": "GaussianPulse",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Gaussian heightmap.",
                "type": "output"
            }
        }
    },
    "Gavoronoise": {
        "attributes": {
            "amplitude": {
                "description": "TODO",
                "key": "amplitude",
                "label": "amplitude",
                "type": "Float"
            },
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "angle_spread_ratio": {
                "description": "TODO",
                "key": "angle_spread_ratio",
                "label": "angle_spread_ratio",
                "type": "Float"
            },
            "branch_strength": {
                "description": "TODO",
                "key": "branch_strength",
                "label": "branch_strength",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "Inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "kw_multiplier": {
                "description": "TODO",
                "key": "kw_multiplier",
                "label": "kw_multiplier",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "Lacunarity",
                "type": "Float"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "Octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "Persistence",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "Remap range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "slope_strength": {
                "description": "TODO",
                "key": "slope_strength",
                "label": "slope_strength",
                "type": "Float"
            },
            "z_cut_max": {
                "description": "TODO",
                "key": "z_cut_max",
                "label": "z_cut_max",
                "type": "Float"
            },
            "z_cut_min": {
                "description": "TODO",
                "key": "z_cut_min",
                "label": "z_cut_min",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "TODO",
        "label": "Gavoronoise",
        "ports": {
            "angle": {
                "caption": "angle",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Gradient": {
        "attributes": {
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "Remap range",
                "type": "Value range"
            }
        },
        "category": "Math/Gradient",
        "description": "Gradient provides insight into the spatial distribution of a function's gradient, conveying both direction and intensity of change across the xy-plane",
        "label": "Gradient",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Gradient with respect to the x-direction.",
                "type": "output"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Gradient with respect to the y-direction.",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            }
        }
    },
    "GradientAngle": {
        "attributes": {
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Math/Gradient",
        "description": "The gradient angle of a heightmap refers to the direction in which the elevation changes most rapidly at each point on the map. It represents the slope or inclination of the terrain surface relative to a horizontal plane",
        "label": "GradientAngle",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Gradient angle.",
                "type": "output"
            }
        }
    },
    "GradientNorm": {
        "attributes": {
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Math/Gradient",
        "description": "The gradient norm of a heightmap refers to the magnitude or intensity of the rate of change of elevation at each point on the map. It represents the steepness or slope of the terrain surface, irrespective of its direction.",
        "label": "GradientNorm",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Gradient norm.",
                "type": "output"
            }
        }
    },
    "GradientTalus": {
        "attributes": {
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Math/Gradient",
        "description": "Gradient talus refers to the local steepest downslope, or the direction in which the terrain descends most rapidly, at each point on the heightmap.",
        "label": "GradientTalus",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Gradient talus.",
                "type": "output"
            }
        }
    },
    "HeightmapToKernel": {
        "attributes": {
            "envelope": {
                "description": "TODO",
                "key": "envelope",
                "label": "envelope",
                "type": "Bool"
            },
            "envelope_kernel": {
                "description": "TODO",
                "key": "envelope_kernel",
                "label": "envelope_kernel",
                "type": "Enumeration"
            },
            "normalize": {
                "description": "TODO",
                "key": "normalize",
                "label": "normalize",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Converter",
        "description": "Convert an heightmap to a kernel.",
        "label": "HeightmapToKernel",
        "ports": {
            "heightmap": {
                "caption": "heightmap",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "kernel": {
                "caption": "kernel",
                "data_type": "Array",
                "description": "Kernel.",
                "type": "output"
            }
        }
    },
    "HeightmapToMask": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "saturate_k": {
                "description": "TODO",
                "key": "saturate_k",
                "label": "saturate_k",
                "type": "Float"
            },
            "saturate_range": {
                "description": "TODO",
                "key": "saturate_range",
                "label": "saturate_range",
                "type": "Value range"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Converter",
        "description": "Convert an heightmap to a mask (remap values).",
        "label": "HeightmapToMask",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask.",
                "type": "output"
            }
        }
    },
    "HeightmapToRGBA": {
        "category": "Converter",
        "description": "HeightmapToRGBA converts a series of heightmaps into an RGBA splatmap.",
        "label": "HeightmapToRGBA",
        "ports": {
            "A": {
                "caption": "A",
                "data_type": "Heightmap",
                "description": "Alpha channel.",
                "type": "input"
            },
            "B": {
                "caption": "B",
                "data_type": "Heightmap",
                "description": "Blue channel.",
                "type": "input"
            },
            "G": {
                "caption": "G",
                "data_type": "Heightmap",
                "description": "Green channel.",
                "type": "input"
            },
            "R": {
                "caption": "R",
                "data_type": "Heightmap",
                "description": "Red channel.",
                "type": "input"
            },
            "RGBA": {
                "caption": "RGBA",
                "data_type": "HeightmapRGBA",
                "description": "RGBA heightmap.",
                "type": "output"
            }
        }
    },
    "HydraulicBlur": {
        "attributes": {
            "k_smoothing": {
                "description": "TODO",
                "key": "k_smoothing",
                "label": "k_smoothing",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "vmax": {
                "description": "TODO",
                "key": "vmax",
                "label": "vmax",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "Hydraulic Blur applied a cell-based hydraulic erosion using a nonlinear diffusion model.",
        "label": "HydraulicBlur",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Eroded heightmap.",
                "type": "output"
            }
        }
    },
    "HydraulicMusgrave": {
        "attributes": {
            "c_capacity": {
                "description": "TODO",
                "key": "c_capacity",
                "label": "c_capacity",
                "type": "Float"
            },
            "c_deposition": {
                "description": "TODO",
                "key": "c_deposition",
                "label": "c_deposition",
                "type": "Float"
            },
            "c_erosion": {
                "description": "TODO",
                "key": "c_erosion",
                "label": "c_erosion",
                "type": "Float"
            },
            "evap_rate": {
                "description": "TODO",
                "key": "evap_rate",
                "label": "evap_rate",
                "type": "Float"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "water_level": {
                "description": "TODO",
                "key": "water_level",
                "label": "water_level",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "HydraulicMusgrave",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "moisture": {
                "caption": "moisture",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "HydraulicParticle": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "c_capacity": {
                "description": "TODO",
                "key": "c_capacity",
                "label": "c_capacity",
                "type": "Float"
            },
            "c_deposition": {
                "description": "TODO",
                "key": "c_deposition",
                "label": "c_deposition",
                "type": "Float"
            },
            "c_erosion": {
                "description": "TODO",
                "key": "c_erosion",
                "label": "c_erosion",
                "type": "Float"
            },
            "deposition_only": {
                "description": "TODO",
                "key": "deposition_only",
                "label": "deposition_only",
                "type": "Bool"
            },
            "downscale": {
                "description": "TODO",
                "key": "downscale",
                "label": "downscale",
                "type": "Bool"
            },
            "drag_rate": {
                "description": "TODO",
                "key": "drag_rate",
                "label": "drag_rate",
                "type": "Float"
            },
            "evap_rate": {
                "description": "TODO",
                "key": "evap_rate",
                "label": "evap_rate",
                "type": "Float"
            },
            "kc": {
                "description": "TODO",
                "key": "kc",
                "label": "kc",
                "type": "Float"
            },
            "particle_density": {
                "description": "TODO",
                "key": "particle_density",
                "label": "particle_density",
                "type": "Float"
            },
            "post_filtering": {
                "description": "TODO",
                "key": "post_filtering",
                "label": "post_filtering",
                "type": "Bool"
            },
            "post_filtering_local": {
                "description": "TODO",
                "key": "post_filtering_local",
                "label": "post_filtering_local",
                "type": "Bool"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Erosion/Hydraulic",
        "description": "HydraulicParticle is a particle-based hydraulic erosion operator that simulates the erosion and sediment transport processes that occur due to the flow of water over a terrain represented by the input heightmap. This type of operator models erosion by tracking the movement of virtual particles (or sediment particles) as they are transported by water flow and interact with the terrain.",
        "label": "HydraulicParticle",
        "ports": {
            "bedrock": {
                "caption": "bedrock",
                "data_type": "Heightmap",
                "description": "Bedrock elevation, erosion process cannot carve the heightmap further down this point.",
                "type": "input"
            },
            "deposition": {
                "caption": "deposition",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "erosion": {
                "caption": "erosion",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "moisture": {
                "caption": "moisture",
                "data_type": "Heightmap",
                "description": "Moisture map, influences the amount of water locally deposited.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Eroded heightmap.",
                "type": "output"
            }
        }
    },
    "HydraulicProcedural": {
        "attributes": {
            "delta": {
                "description": "TODO",
                "key": "delta",
                "label": "delta",
                "type": "Float"
            },
            "density_factor": {
                "description": "TODO",
                "key": "density_factor",
                "label": "density_factor",
                "type": "Float"
            },
            "erosion_profile": {
                "description": "TODO",
                "key": "erosion_profile",
                "label": "erosion_profile",
                "type": "Enumeration"
            },
            "kernel_width_ratio": {
                "description": "TODO",
                "key": "kernel_width_ratio",
                "label": "kernel_width_ratio",
                "type": "Float"
            },
            "noise_ratio": {
                "description": "TODO",
                "key": "noise_ratio",
                "label": "noise_ratio",
                "type": "Float"
            },
            "phase_noise_amp": {
                "description": "TODO",
                "key": "phase_noise_amp",
                "label": "phase_noise_amp",
                "type": "Float"
            },
            "phase_smoothing": {
                "description": "TODO",
                "key": "phase_smoothing",
                "label": "phase_smoothing",
                "type": "Float"
            },
            "reverse_phase": {
                "description": "TODO",
                "key": "reverse_phase",
                "label": "reverse_phase",
                "type": "Bool"
            },
            "ridge_scaling": {
                "description": "TODO",
                "key": "ridge_scaling",
                "label": "ridge_scaling",
                "type": "Float"
            },
            "ridge_wavelength": {
                "description": "TODO",
                "key": "ridge_wavelength",
                "label": "ridge_wavelength",
                "type": "Float"
            },
            "rotate90": {
                "description": "TODO",
                "key": "rotate90",
                "label": "rotate90",
                "type": "Bool"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "slope_mask": {
                "description": "TODO",
                "key": "slope_mask",
                "label": "slope_mask",
                "type": "Float"
            },
            "use_default_mask": {
                "description": "TODO",
                "key": "use_default_mask",
                "label": "use_default_mask",
                "type": "Bool"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "HydraulicProcedural",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "ridge_mask": {
                "caption": "ridge_mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "HydraulicSchott": {
        "attributes": {
            "c_deposition": {
                "description": "TODO",
                "key": "c_deposition",
                "label": "c_deposition",
                "type": "Float"
            },
            "c_erosion": {
                "description": "TODO",
                "key": "c_erosion",
                "label": "c_erosion",
                "type": "Float"
            },
            "c_thermal": {
                "description": "TODO",
                "key": "c_thermal",
                "label": "c_thermal",
                "type": "Float"
            },
            "deposition_weight": {
                "description": "TODO",
                "key": "deposition_weight",
                "label": "deposition_weight",
                "type": "Float"
            },
            "flow_acc_exponent": {
                "description": "TODO",
                "key": "flow_acc_exponent",
                "label": "flow_acc_exponent",
                "type": "Float"
            },
            "flow_acc_exponent_depo": {
                "description": "TODO",
                "key": "flow_acc_exponent_depo",
                "label": "flow_acc_exponent_depo",
                "type": "Float"
            },
            "flow_routing_exponent": {
                "description": "TODO",
                "key": "flow_routing_exponent",
                "label": "flow_routing_exponent",
                "type": "Float"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            },
            "thermal_weight": {
                "description": "TODO",
                "key": "thermal_weight",
                "label": "thermal_weight",
                "type": "Float"
            }
        },
        "category": "Erosion/Hydraulic",
        "description": "TODO",
        "label": "HydraulicSchott",
        "ports": {
            "flow_map": {
                "caption": "flow_map",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "HydraulicStream": {
        "attributes": {
            "c_erosion": {
                "description": "TODO",
                "key": "c_erosion",
                "label": "c_erosion",
                "type": "Float"
            },
            "clipping_ratio": {
                "description": "TODO",
                "key": "clipping_ratio",
                "label": "clipping_ratio",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "talus_ref": {
                "description": "TODO",
                "key": "talus_ref",
                "label": "talus_ref",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "HydraulicStream is an hydraulic erosion operator using the flow stream approach and an infinite flow direction algorithm for simulating the erosion processes. Simulate water flow across the terrain using the infinite flow direction algorithm. As water flows over the terrain, flow accumulation representing the volume of water that passes through each point on the map, is computed to evaluate the erosive power of the water flow.",
        "label": "HydraulicStream",
        "ports": {
            "erosion": {
                "caption": "erosion",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Eroded heightmap.",
                "type": "output"
            }
        }
    },
    "HydraulicStreamLog": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "c_erosion": {
                "description": "TODO",
                "key": "c_erosion",
                "label": "c_erosion",
                "type": "Float"
            },
            "deposition_radius": {
                "description": "TODO",
                "key": "deposition_radius",
                "label": "deposition_radius",
                "type": "Float"
            },
            "deposition_scale_ratio": {
                "description": "TODO",
                "key": "deposition_scale_ratio",
                "label": "deposition_scale_ratio",
                "type": "Float"
            },
            "gradient_power": {
                "description": "TODO",
                "key": "gradient_power",
                "label": "gradient_power",
                "type": "Float"
            },
            "gradient_prefilter_radius": {
                "description": "TODO",
                "key": "gradient_prefilter_radius",
                "label": "gradient_prefilter_radius",
                "type": "Float"
            },
            "gradient_scaling_ratio": {
                "description": "TODO",
                "key": "gradient_scaling_ratio",
                "label": "gradient_scaling_ratio",
                "type": "Float"
            },
            "saturation_ratio": {
                "description": "TODO",
                "key": "saturation_ratio",
                "label": "saturation_ratio",
                "type": "Float"
            },
            "talus_ref": {
                "description": "TODO",
                "key": "talus_ref",
                "label": "talus_ref",
                "type": "Float"
            }
        },
        "category": "Erosion/Hydraulic",
        "description": "TODO",
        "label": "HydraulicStreamLog",
        "ports": {
            "deposition": {
                "caption": "deposition",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "erosion": {
                "caption": "erosion",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "flow_map": {
                "caption": "flow_map",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "HydraulicStreamUpscaleAmplification": {
        "attributes": {
            "c_erosion": {
                "description": "TODO",
                "key": "c_erosion",
                "label": "c_erosion",
                "type": "Float"
            },
            "clipping_ratio": {
                "description": "TODO",
                "key": "clipping_ratio",
                "label": "clipping_ratio",
                "type": "Float"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "talus_ref": {
                "description": "TODO",
                "key": "talus_ref",
                "label": "talus_ref",
                "type": "Float"
            },
            "upscaling_levels": {
                "description": "TODO",
                "key": "upscaling_levels",
                "label": "upscaling_levels",
                "type": "Integer"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "HydraulicStreamUpscaleAmplification",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "HydraulicVpipes": {
        "attributes": {
            "c_capacity": {
                "description": "TODO",
                "key": "c_capacity",
                "label": "c_capacity",
                "type": "Float"
            },
            "c_deposition": {
                "description": "TODO",
                "key": "c_deposition",
                "label": "c_deposition",
                "type": "Float"
            },
            "c_erosion": {
                "description": "TODO",
                "key": "c_erosion",
                "label": "c_erosion",
                "type": "Float"
            },
            "evap_rate": {
                "description": "TODO",
                "key": "evap_rate",
                "label": "evap_rate",
                "type": "Float"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "rain_rate": {
                "description": "TODO",
                "key": "rain_rate",
                "label": "rain_rate",
                "type": "Float"
            },
            "water_height": {
                "description": "TODO",
                "key": "water_height",
                "label": "water_height",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "HydraulicVpipes performs hydraulic erosion using a virtual pipe algorithm, which is a method that simulates erosion and sediment transport processes by mimicking the behavior of water flowing through a network of virtual pipes. This approach models erosion based on the principles of fluid dynamics and sediment transport, while also considering the local topography of the terrain represented by the input heightmap.",
        "label": "HydraulicVpipes",
        "ports": {
            "bedrock": {
                "caption": "bedrock",
                "data_type": "Heightmap",
                "description": "Bedrock elevation, erosion process cannot carve the heightmap further down this point.",
                "type": "input"
            },
            "deposition": {
                "caption": "deposition",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "erosion": {
                "caption": "erosion",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "moisture": {
                "caption": "moisture",
                "data_type": "Heightmap",
                "description": "Moisture map, influences the amount of water locally deposited.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Eroded heightmap.",
                "type": "output"
            }
        }
    },
    "ImportHeightmap": {
        "attributes": {
            "fname": {
                "description": "TODO",
                "key": "fname",
                "label": "fname",
                "type": "Filename"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            }
        },
        "category": "IO/Files",
        "description": "ImportHeightmap imports an heighmap from a grayscale PNG 8bit file.",
        "label": "ImportHeightmap",
        "ports": {
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ImportTexture": {
        "attributes": {
            "fname": {
                "description": "TODO",
                "key": "fname",
                "label": "fname",
                "type": "Filename"
            }
        },
        "category": "IO/Files",
        "description": "TODO",
        "label": "ImportTexture",
        "ports": {
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Inverse": {
        "category": "Math/Base",
        "description": "Inverse flips the sign of every values.",
        "label": "Inverse",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Binary heightmap.",
                "type": "output"
            }
        }
    },
    "KernelGabor": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "kw",
                "type": "Float"
            },
            "normalize": {
                "description": "TODO",
                "key": "normalize",
                "label": "normalize",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Primitive/Kernel",
        "description": ".",
        "label": "KernelGabor",
        "ports": {
            "kernel": {
                "caption": "kernel",
                "data_type": "Array",
                "description": "KernelGabor generates a Gabor kernel.",
                "type": "output"
            }
        }
    },
    "KernelPrim": {
        "attributes": {
            "kernel": {
                "description": "TODO",
                "key": "kernel",
                "label": "kernel",
                "type": "Enumeration"
            },
            "normalize": {
                "description": "TODO",
                "key": "normalize",
                "label": "normalize",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Primitive/Kernel",
        "description": ".",
        "label": "KernelPrim",
        "ports": {
            "kernel": {
                "caption": "kernel",
                "data_type": "Array",
                "description": "KernelPrim generates a 'kernel', refering to a small matrix used to apply specific effects based on convolution for instance.",
                "type": "output"
            }
        }
    },
    "KmeansClustering2": {
        "attributes": {
            "compute_scoring": {
                "description": "TODO",
                "key": "compute_scoring",
                "label": "compute_scoring",
                "type": "Bool"
            },
            "nclusters": {
                "description": "TODO",
                "key": "nclusters",
                "label": "nclusters",
                "type": "Integer"
            },
            "normalize_inputs": {
                "description": "TODO",
                "key": "normalize_inputs",
                "label": "normalize_inputs",
                "type": "Bool"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weights.x": {
                "description": "TODO",
                "key": "weights.x",
                "label": "weights.x",
                "type": "Float"
            },
            "weights.y": {
                "description": "TODO",
                "key": "weights.y",
                "label": "weights.y",
                "type": "Float"
            }
        },
        "category": "Features/Clustering",
        "description": "KmeansClustering2 node groups the data into clusters based on the values of the two input features.",
        "label": "KmeansClustering2",
        "ports": {
            "feature 1": {
                "caption": "feature 1",
                "data_type": "Heightmap",
                "description": "First measurable property or characteristic of the data points being analyzed (e.g elevation, gradient norm, etc...",
                "type": "input"
            },
            "feature 2": {
                "caption": "feature 2",
                "data_type": "Heightmap",
                "description": "Second measurable property or characteristic of the data points being analyzed (e.g elevation, gradient norm, etc...",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Cluster labelling.",
                "type": "output"
            },
            "scoring": {
                "caption": "scoring",
                "data_type": "vector<Heightmap>",
                "description": "Score in [0, 1] of the cell to belong to a given cluster",
                "type": "output"
            }
        }
    },
    "KmeansClustering3": {
        "attributes": {
            "compute_scoring": {
                "description": "TODO",
                "key": "compute_scoring",
                "label": "compute_scoring",
                "type": "Bool"
            },
            "nclusters": {
                "description": "TODO",
                "key": "nclusters",
                "label": "nclusters",
                "type": "Integer"
            },
            "normalize_inputs": {
                "description": "TODO",
                "key": "normalize_inputs",
                "label": "normalize_inputs",
                "type": "Bool"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weights.x": {
                "description": "TODO",
                "key": "weights.x",
                "label": "weights.x",
                "type": "Float"
            },
            "weights.y": {
                "description": "TODO",
                "key": "weights.y",
                "label": "weights.y",
                "type": "Float"
            },
            "weights.z": {
                "description": "TODO",
                "key": "weights.z",
                "label": "weights.z",
                "type": "Float"
            }
        },
        "category": "Features/Clustering",
        "description": "KmeansClustering2 node groups the data into clusters based on the values of the three input features.",
        "label": "KmeansClustering3",
        "ports": {
            "feature 1": {
                "caption": "feature 1",
                "data_type": "Heightmap",
                "description": "First measurable property or characteristic of the data points being analyzed (e.g elevation, gradient norm, etc...",
                "type": "input"
            },
            "feature 2": {
                "caption": "feature 2",
                "data_type": "Heightmap",
                "description": "First measurable property or characteristic of the data points being analyzed (e.g elevation, gradient norm, etc...",
                "type": "input"
            },
            "feature 3": {
                "caption": "feature 3",
                "data_type": "Heightmap",
                "description": "Third measurable property or characteristic of the data points being analyzed (e.g elevation, gradient norm, etc...",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Cluster labelling.",
                "type": "output"
            },
            "scoring": {
                "caption": "scoring",
                "data_type": "vector<Heightmap>",
                "description": "Score in [0, 1] of the cell to belong to a given cluster",
                "type": "output"
            }
        }
    },
    "Kuwahara": {
        "attributes": {
            "mix_ratio": {
                "description": "TODO",
                "key": "mix_ratio",
                "label": "mix_ratio",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "Kuwahara",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Laplace": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "sigma": {
                "description": "TODO",
                "key": "sigma",
                "label": "sigma",
                "type": "Float"
            }
        },
        "category": "Filter/Smoothing",
        "description": "Laplace smoothing filter reduces noise and smooth out variations in pixel intensity while preserving the overall structure of an image.",
        "label": "Laplace",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "Lerp": {
        "attributes": {
            "t": {
                "description": "TODO",
                "key": "t",
                "label": "t",
                "type": "Float"
            }
        },
        "category": "Math/Base",
        "description": "The Lerp operator, short for linear interpolation, is a method for smoothly transitioning between two values over a specified range or interval.",
        "label": "Lerp",
        "ports": {
            "a": {
                "caption": "a",
                "data_type": "Heightmap",
                "description": "Start heightmap (t = 0).",
                "type": "input"
            },
            "b": {
                "caption": "b",
                "data_type": "Heightmap",
                "description": "End heightmap (t = 1).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Interpolated heightmap.",
                "type": "output"
            },
            "t": {
                "caption": "t",
                "data_type": "Heightmap",
                "description": "Lerp factor, expected in [0, 1].",
                "type": "input"
            }
        }
    },
    "MakeBinary": {
        "attributes": {
            "threshold": {
                "description": "TODO",
                "key": "threshold",
                "label": "threshold",
                "type": "Float"
            }
        },
        "category": "Operator/Morphology",
        "description": "MakeBinary is a thresholding operator. It transforms an input heightmap into a binary heightmap, where each pixel is assigned either a value of 0 or 1, depending on whether its intensity value surpasses a specified threshold.",
        "label": "MakeBinary",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Binary heightmap.",
                "type": "output"
            }
        }
    },
    "MakePeriodic": {
        "attributes": {
            "overlap": {
                "description": "TODO",
                "key": "overlap",
                "label": "overlap",
                "type": "Float"
            }
        },
        "category": "Operator/Tiling",
        "description": "MakePeriodic makes the input heightmap tileable by building a smooth lineat transition at the boundaries.",
        "label": "MakePeriodic",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Binary heightmap.",
                "type": "output"
            }
        }
    },
    "MakePeriodicStitching": {
        "attributes": {
            "overlap": {
                "description": "TODO",
                "key": "overlap",
                "label": "overlap",
                "type": "Float"
            }
        },
        "category": "Operator/Tiling",
        "description": "MakePeriodicStitching makes the input heightmap tileable by seamlessly stitching together the domain boundaries.",
        "label": "MakePeriodicStitching",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Binary heightmap.",
                "type": "output"
            }
        }
    },
    "Median3x3": {
        "category": "Filter/Smoothing",
        "description": "Median3x3 filter is a median filter with a 3x3 kernel used to reduce noise while preserving edges in an image. This process removes outliers and smooths the image without noise reduction and feature preservation in digital images.",
        "label": "Median3x3",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "MixNormalMap": {
        "attributes": {
            "blending_method": {
                "description": "TODO",
                "key": "blending_method",
                "label": "blending_method",
                "type": "Enumeration"
            },
            "detail_scaling": {
                "description": "TODO",
                "key": "detail_scaling",
                "label": "detail_scaling",
                "type": "Float"
            }
        },
        "category": "Texture",
        "description": "TODO",
        "label": "MixNormalMap",
        "ports": {
            "normal map": {
                "caption": "normal map",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "normal map base": {
                "caption": "normal map base",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "normal map detail": {
                "caption": "normal map detail",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            }
        }
    },
    "MixTexture": {
        "attributes": {
            "reset_output_alpha": {
                "description": "TODO",
                "key": "reset_output_alpha",
                "label": "reset_output_alpha",
                "type": "Bool"
            },
            "use_sqrt_avg": {
                "description": "TODO",
                "key": "use_sqrt_avg",
                "label": "use_sqrt_avg",
                "type": "Bool"
            }
        },
        "category": "Texture",
        "description": "MixTexture enables the seamless integration of multiple textures by utilizing the alpha channel information to control the blending.",
        "label": "MixTexture",
        "ports": {
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "Output texture.",
                "type": "output"
            },
            "texture1": {
                "caption": "texture1",
                "data_type": "HeightmapRGBA",
                "description": "Input texture.",
                "type": "input"
            },
            "texture2": {
                "caption": "texture2",
                "data_type": "HeightmapRGBA",
                "description": "Input texture.",
                "type": "input"
            },
            "texture3": {
                "caption": "texture3",
                "data_type": "HeightmapRGBA",
                "description": "Input texture.",
                "type": "input"
            },
            "texture4": {
                "caption": "texture4",
                "data_type": "HeightmapRGBA",
                "description": "Input texture.",
                "type": "input"
            }
        }
    },
    "Mixer": {
        "category": "Operator/Blend",
        "description": "The Mixer operator takes several input heightmaps and blend them according to a mixing parameter expected in [0, 1].",
        "label": "Mixer",
        "ports": {
            "input 1": {
                "caption": "input 1",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "input 2": {
                "caption": "input 2",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "input 3": {
                "caption": "input 3",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "input 4": {
                "caption": "input 4",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            },
            "t": {
                "caption": "t",
                "data_type": "Heightmap",
                "description": "Mixing parameter, expected in [0, 1].",
                "type": "input"
            }
        }
    },
    "MorphologicalGradient": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Operator/Morphology",
        "description": "MorphologicalGradient calculates the difference between dilation and erosion of an image, resulting in the outline of objects. Use Cases: Edge detection, boundary extraction.",
        "label": "MorphologicalGradient",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Gradient heightmap.",
                "type": "output"
            }
        }
    },
    "MountainRangeRadial": {
        "attributes": {
            "angle_spread_ratio": {
                "description": "TODO",
                "key": "angle_spread_ratio",
                "label": "angle_spread_ratio",
                "type": "Float"
            },
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "core_size_ratio": {
                "description": "TODO",
                "key": "core_size_ratio",
                "label": "core_size_ratio",
                "type": "Float"
            },
            "half_width": {
                "description": "TODO",
                "key": "half_width",
                "label": "half_width",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "kw",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "lacunarity",
                "type": "Float"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Geological",
        "description": "TODO",
        "label": "MountainRangeRadial",
        "ports": {
            "angle": {
                "caption": "angle",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Noise": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "Inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "noise_type": {
                "description": "TODO",
                "key": "noise_type",
                "label": "Noise type",
                "type": "Enumeration"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "Remap range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Primitive/Coherent",
        "description": "Noise node generates coherent and random-looking patterns.",
        "label": "Noise",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "out": {
                "caption": "out",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "NoiseFbm": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "Inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "Lacunarity",
                "type": "Float"
            },
            "noise_type": {
                "description": "TODO",
                "key": "noise_type",
                "label": "Noise type",
                "type": "Enumeration"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "Octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "Persistence",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "Remap range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "Weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "Fractal noise is a mathematical algorithm used to generate complex and detailed patterns characterized by self-similarity across different scales.",
        "label": "NoiseFbm",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "NoiseIq": {
        "attributes": {
            "gradient_scale": {
                "description": "TODO",
                "key": "gradient_scale",
                "label": "gradient_scale",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "lacunarity",
                "type": "Float"
            },
            "noise_type": {
                "description": "TODO",
                "key": "noise_type",
                "label": "noise_type",
                "type": "Enumeration"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "NoiseIq, variant of NoiseFbm.",
        "label": "NoiseIq",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "NoiseJordan": {
        "attributes": {
            "gradient_scale": {
                "description": "TODO",
                "key": "gradient_scale",
                "label": "gradient_scale",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "lacunarity",
                "type": "Float"
            },
            "noise_type": {
                "description": "TODO",
                "key": "noise_type",
                "label": "noise_type",
                "type": "Enumeration"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "NoiseJordan, variant of NoiseFbm.",
        "label": "NoiseJordan",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "NoiseParberry": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "lacunarity",
                "type": "Float"
            },
            "mu": {
                "description": "TODO",
                "key": "mu",
                "label": "mu",
                "type": "Float"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "NoiseParberry, variant of NoiseFbm, is a Perlin noise based terrain generator from Ian Parberry, Tobler's First Law of Geography, Self Similarity, and Perlin Noise: A Large Scale Analysis of Gradient Distribution in Southern Utah with Application to Procedural Terrain Generation.",
        "label": "NoiseParberry",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "NoisePingpong": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "lacunarity",
                "type": "Float"
            },
            "noise_type": {
                "description": "TODO",
                "key": "noise_type",
                "label": "noise_type",
                "type": "Enumeration"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "NoisePingPong, variant of NoiseFbm.",
        "label": "NoisePingpong",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "NoiseRidged": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "k_smoothing": {
                "description": "TODO",
                "key": "k_smoothing",
                "label": "k_smoothing",
                "type": "Float"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "lacunarity",
                "type": "Float"
            },
            "noise_type": {
                "description": "TODO",
                "key": "noise_type",
                "label": "noise_type",
                "type": "Enumeration"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "NoiseRidged, variant of NoiseFbm.",
        "label": "NoiseRidged",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "NoiseSwiss": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "lacunarity": {
                "description": "TODO",
                "key": "lacunarity",
                "label": "lacunarity",
                "type": "Float"
            },
            "noise_type": {
                "description": "TODO",
                "key": "noise_type",
                "label": "noise_type",
                "type": "Enumeration"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "octaves",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "warp_scale": {
                "description": "TODO",
                "key": "warp_scale",
                "label": "warp_scale",
                "type": "Float"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "weight",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "NoiseSwiss, variant of NoiseFbm.",
        "label": "NoiseSwiss",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "NormalDisplacement": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "amount": {
                "description": "TODO",
                "key": "amount",
                "label": "amount",
                "type": "Float"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "reverse": {
                "description": "TODO",
                "key": "reverse",
                "label": "reverse",
                "type": "Bool"
            }
        },
        "category": "Filter/Recast",
        "description": "NormalDisplacement applies a displacement to the terrain along the normal direction.",
        "label": "NormalDisplacement",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "Opening": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Operator/Morphology",
        "description": "Opening is a combination of erosion followed by dilation. It is primarily used for removing noise while preserving the shape and size of objects. Use Cases: Noise removal: Opening is effective in removing small, isolated noise regions while keeping the main objects intact. Smoothing object boundaries: Opening can help smooth the boundaries of objects in an image while preserving their overall shape.",
        "label": "Opening",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Dilated heightmap.",
                "type": "output"
            }
        }
    },
    "Paraboloid": {
        "attributes": {
            "a": {
                "description": "TODO",
                "key": "a",
                "label": "a",
                "type": "Float"
            },
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "b": {
                "description": "TODO",
                "key": "b",
                "label": "b",
                "type": "Float"
            },
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "reverse_x": {
                "description": "TODO",
                "key": "reverse_x",
                "label": "reverse_x",
                "type": "Bool"
            },
            "reverse_y": {
                "description": "TODO",
                "key": "reverse_y",
                "label": "reverse_y",
                "type": "Bool"
            },
            "v0": {
                "description": "TODO",
                "key": "v0",
                "label": "v0",
                "type": "Float"
            }
        },
        "category": "Primitive/Function",
        "description": ".",
        "label": "Paraboloid",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Paraboloid.",
                "type": "output"
            }
        }
    },
    "Path": {
        "attributes": {
            "path": {
                "description": "TODO",
                "key": "path",
                "label": "Path",
                "type": "Path"
            },
            "reverse": {
                "description": "TODO",
                "key": "reverse",
                "label": "reverse",
                "type": "Bool"
            }
        },
        "category": "Geometry/Path",
        "description": "Polyline definition.",
        "label": "Path",
        "ports": {
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "Set of directed points (x, y) and elevations z.",
                "type": "output"
            }
        }
    },
    "PathBezier": {
        "attributes": {
            "curvature_ratio": {
                "description": "TODO",
                "key": "curvature_ratio",
                "label": "curvature_ratio",
                "type": "Float"
            },
            "edge_divisions": {
                "description": "TODO",
                "key": "edge_divisions",
                "label": "edge_divisions",
                "type": "Integer"
            }
        },
        "category": "Geometry/Path",
        "description": "PathBezier uses Bezier interpolation to replace sharp angles and straight segments with smooth, flowing curves.",
        "label": "PathBezier",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Path",
                "description": "Output path.",
                "type": "output"
            }
        }
    },
    "PathBezierRound": {
        "attributes": {
            "curvature_ratio": {
                "description": "TODO",
                "key": "curvature_ratio",
                "label": "curvature_ratio",
                "type": "Float"
            },
            "edge_divisions": {
                "description": "TODO",
                "key": "edge_divisions",
                "label": "edge_divisions",
                "type": "Integer"
            }
        },
        "category": "Geometry/Path",
        "description": "PathBezierRound uses Bezier interpolation to replace sharp angles and straight segments with smooth, round and flowing curves. PathBezierRound is an alternative to PathBezier.",
        "label": "PathBezierRound",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Path",
                "description": "Output path.",
                "type": "output"
            }
        }
    },
    "PathBspline": {
        "attributes": {
            "edge_divisions": {
                "description": "TODO",
                "key": "edge_divisions",
                "label": "edge_divisions",
                "type": "Integer"
            }
        },
        "category": "Geometry/Path",
        "description": "PathBspline uses Bspline interpolation to replace sharp angles and straight segments with smooth, flowing curves.",
        "label": "PathBspline",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Path",
                "description": "Output path.",
                "type": "output"
            }
        }
    },
    "PathDecasteljau": {
        "attributes": {
            "edge_divisions": {
                "description": "TODO",
                "key": "edge_divisions",
                "label": "edge_divisions",
                "type": "Integer"
            }
        },
        "category": "Geometry/Path",
        "description": "PathDecasteljau uses Decasteljau interpolation to replace sharp angles and straight segments with smooth, flowing curves.",
        "label": "PathDecasteljau",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Path",
                "description": "Output path.",
                "type": "output"
            }
        }
    },
    "PathDig": {
        "attributes": {
            "decay": {
                "description": "TODO",
                "key": "decay",
                "label": "decay",
                "type": "Float"
            },
            "depth": {
                "description": "TODO",
                "key": "depth",
                "label": "depth",
                "type": "Float"
            },
            "flattening_radius": {
                "description": "TODO",
                "key": "flattening_radius",
                "label": "flattening_radius",
                "type": "Float"
            },
            "force_downhill": {
                "description": "TODO",
                "key": "force_downhill",
                "label": "force_downhill",
                "type": "Bool"
            },
            "width": {
                "description": "TODO",
                "key": "width",
                "label": "width",
                "type": "Float"
            }
        },
        "category": "Geometry/Path",
        "description": "TODO",
        "label": "PathDig",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "TODO",
                "type": "input"
            }
        }
    },
    "PathFind": {
        "attributes": {
            "distance_exponent": {
                "description": "TODO",
                "key": "distance_exponent",
                "label": "distance_exponent",
                "type": "Float"
            },
            "downsampling": {
                "description": "TODO",
                "key": "downsampling",
                "label": "downsampling",
                "type": "Integer"
            },
            "elevation_ratio": {
                "description": "TODO",
                "key": "elevation_ratio",
                "label": "elevation_ratio",
                "type": "Float"
            }
        },
        "category": "Geometry/Path",
        "description": "TODO",
        "label": "PathFind",
        "ports": {
            "heightmap": {
                "caption": "heightmap",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask nogo": {
                "caption": "mask nogo",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "TODO",
                "type": "output"
            },
            "waypoints": {
                "caption": "waypoints",
                "data_type": "Path",
                "description": "TODO",
                "type": "input"
            }
        }
    },
    "PathFractalize": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "orientation": {
                "description": "TODO",
                "key": "orientation",
                "label": "orientation",
                "type": "Integer"
            },
            "persistence": {
                "description": "TODO",
                "key": "persistence",
                "label": "persistence",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "sigma": {
                "description": "TODO",
                "key": "sigma",
                "label": "sigma",
                "type": "Float"
            }
        },
        "category": "Geometry/Path",
        "description": "PathFractalize fractalizes a polyline using a mid-point displacement algorithm. The procedure involves iteratively modifying the polyline's geometry to increase its complexity, mimicking fractal characteristics.",
        "label": "PathFractalize",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Path",
                "description": "Output path.",
                "type": "output"
            }
        }
    },
    "PathMeanderize": {
        "attributes": {
            "edge_divisions": {
                "description": "TODO",
                "key": "edge_divisions",
                "label": "edge_divisions",
                "type": "Integer"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "noise_ratio": {
                "description": "TODO",
                "key": "noise_ratio",
                "label": "noise_ratio",
                "type": "Float"
            },
            "ratio": {
                "description": "TODO",
                "key": "ratio",
                "label": "ratio",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Geometry/Path",
        "description": "PathMeanderize uses Bezier interpolation to add menaders to the input path.",
        "label": "PathMeanderize",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Path",
                "description": "Output path.",
                "type": "output"
            }
        }
    },
    "PathResample": {
        "attributes": {
            "delta": {
                "description": "TODO",
                "key": "delta",
                "label": "delta",
                "type": "Float"
            }
        },
        "category": "Geometry/Path",
        "description": "PathResample resamples the path based to get (approximately) a given distance between points.",
        "label": "PathResample",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Path",
                "description": "Output path.",
                "type": "output"
            }
        }
    },
    "PathSDF": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "Inverse",
                "type": "Bool"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "Remap",
                "type": "Bool"
            }
        },
        "category": "Geometry/Path",
        "description": "PathSDF evaluates the signed distance function of a polyline. It assigns a signed distance value to every point in space. For points outside the polyline, the distance is positive, while for points inside, it's negative. The zero level set of this function precisely defines the polyline's path Project path points to an heightmap.",
        "label": "PathSDF",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            },
            "sdf": {
                "caption": "sdf",
                "data_type": "Heightmap",
                "description": "Signed distance as an heightmap.",
                "type": "output"
            }
        }
    },
    "PathSmooth": {
        "attributes": {
            "averaging_intensity": {
                "description": "TODO",
                "key": "averaging_intensity",
                "label": "averaging_intensity",
                "type": "Float"
            },
            "inertia": {
                "description": "TODO",
                "key": "inertia",
                "label": "inertia",
                "type": "Float"
            },
            "navg": {
                "description": "TODO",
                "key": "navg",
                "label": "navg",
                "type": "Integer"
            }
        },
        "category": "Geometry/Path",
        "description": "TODO",
        "label": "PathSmooth",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Path",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Path",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "PathToCloud": {
        "category": "Converter",
        "description": "PathToCloud convert a Path to a set of points (Cloud).",
        "label": "PathToCloud",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Output cloud.",
                "type": "output"
            },
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            }
        }
    },
    "PathToHeightmap": {
        "attributes": {
            "filled": {
                "description": "TODO",
                "key": "filled",
                "label": "filled",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Converter",
        "description": "PathToHeightmap Project path points to an heightmap.",
        "label": "PathToHeightmap",
        "ports": {
            "heightmap": {
                "caption": "heightmap",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            },
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "Input path.",
                "type": "input"
            }
        }
    },
    "Plateau": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "factor": {
                "description": "TODO",
                "key": "factor",
                "label": "factor",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Filter/Recurve",
        "description": "Plateau node manipulates the elevation values to create flats, elevated regions surrounded by steep slopes.",
        "label": "Plateau",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "Preview": {
        "category": "Debug",
        "description": "TODO",
        "label": "Preview",
        "ports": {
            "elevation": {
                "caption": "elevation",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "normal map": {
                "caption": "normal map",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "scalar": {
                "caption": "scalar",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            }
        }
    },
    "QuiltingBlend": {
        "attributes": {
            "filter_width_ratio": {
                "description": "TODO",
                "key": "filter_width_ratio",
                "label": "filter_width_ratio",
                "type": "Float"
            },
            "overlap": {
                "description": "TODO",
                "key": "overlap",
                "label": "overlap",
                "type": "Float"
            },
            "patch_flip": {
                "description": "TODO",
                "key": "patch_flip",
                "label": "patch_flip",
                "type": "Bool"
            },
            "patch_rotate": {
                "description": "TODO",
                "key": "patch_rotate",
                "label": "patch_rotate",
                "type": "Bool"
            },
            "patch_transpose": {
                "description": "TODO",
                "key": "patch_transpose",
                "label": "patch_transpose",
                "type": "Bool"
            },
            "patch_width": {
                "description": "TODO",
                "key": "patch_width",
                "label": "patch_width",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Operator/Resynthesis",
        "description": "TODO",
        "label": "QuiltingBlend",
        "ports": {
            "input 1": {
                "caption": "input 1",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "input 2": {
                "caption": "input 2",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "input 3": {
                "caption": "input 3",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "input 4": {
                "caption": "input 4",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "QuiltingExpand": {
        "attributes": {
            "expansion_ratio": {
                "description": "TODO",
                "key": "expansion_ratio",
                "label": "expansion_ratio",
                "type": "Float"
            },
            "filter_width_ratio": {
                "description": "TODO",
                "key": "filter_width_ratio",
                "label": "filter_width_ratio",
                "type": "Float"
            },
            "overlap": {
                "description": "TODO",
                "key": "overlap",
                "label": "overlap",
                "type": "Float"
            },
            "patch_flip": {
                "description": "TODO",
                "key": "patch_flip",
                "label": "patch_flip",
                "type": "Bool"
            },
            "patch_rotate": {
                "description": "TODO",
                "key": "patch_rotate",
                "label": "patch_rotate",
                "type": "Bool"
            },
            "patch_transpose": {
                "description": "TODO",
                "key": "patch_transpose",
                "label": "patch_transpose",
                "type": "Bool"
            },
            "patch_width": {
                "description": "TODO",
                "key": "patch_width",
                "label": "patch_width",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Operator/Resynthesis",
        "description": "QuiltingExpand is an operator based on quilting that changes the feature wavenumber of a heightmap by modifying the frequency or scale of features present in the heightmap using a quilting-like technique. This operator allows for the synthesis of heightmaps with different levels of detail or spatial frequency content.",
        "label": "QuiltingExpand",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Synthetized heightmap.",
                "type": "output"
            }
        }
    },
    "QuiltingShuffle": {
        "attributes": {
            "filter_width_ratio": {
                "description": "TODO",
                "key": "filter_width_ratio",
                "label": "filter_width_ratio",
                "type": "Float"
            },
            "overlap": {
                "description": "TODO",
                "key": "overlap",
                "label": "overlap",
                "type": "Float"
            },
            "patch_flip": {
                "description": "TODO",
                "key": "patch_flip",
                "label": "patch_flip",
                "type": "Bool"
            },
            "patch_rotate": {
                "description": "TODO",
                "key": "patch_rotate",
                "label": "patch_rotate",
                "type": "Bool"
            },
            "patch_transpose": {
                "description": "TODO",
                "key": "patch_transpose",
                "label": "patch_transpose",
                "type": "Bool"
            },
            "patch_width": {
                "description": "TODO",
                "key": "patch_width",
                "label": "patch_width",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Operator/Resynthesis",
        "description": "QuiltingShuffle performs a quilting procedure and generates a new image by seamlessly stitching together patches from an existing image.",
        "label": "QuiltingShuffle",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Synthetized heightmap.",
                "type": "output"
            }
        }
    },
    "RadialDisplacementToXy": {
        "attributes": {
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Float"
            }
        },
        "category": "Math",
        "description": "RadialDisplacementToXy interprets the input array dr as a radial displacement and convert it to a pair of displacements dx and dy in cartesian coordinates.",
        "label": "RadialDisplacementToXy",
        "ports": {
            "dr": {
                "caption": "dr",
                "data_type": "Heightmap",
                "description": "Radial displacement.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement for  the x-direction.",
                "type": "output"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement for  the y-direction.",
                "type": "output"
            }
        }
    },
    "RecastCanyon": {
        "attributes": {
            "gamma": {
                "description": "TODO",
                "key": "gamma",
                "label": "gamma",
                "type": "Float"
            },
            "vcut": {
                "description": "TODO",
                "key": "vcut",
                "label": "vcut",
                "type": "Float"
            }
        },
        "category": "Filter/Recast",
        "description": "TODO",
        "label": "RecastCanyon",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "noise": {
                "caption": "noise",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "RecastCliff": {
        "attributes": {
            "amplitude": {
                "description": "TODO",
                "key": "amplitude",
                "label": "amplitude",
                "type": "Float"
            },
            "gain": {
                "description": "TODO",
                "key": "gain",
                "label": "gain",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "Filter/Recast",
        "description": "RecastCliff add cliffs in a heightmap by introducing sharp changes in elevation to simulate steep vertical terrain features such as cliffs or escarpments.",
        "label": "RecastCliff",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "RecastCliffDirectional": {
        "attributes": {
            "amplitude": {
                "description": "TODO",
                "key": "amplitude",
                "label": "amplitude",
                "type": "Float"
            },
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "gain": {
                "description": "TODO",
                "key": "gain",
                "label": "gain",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "Filter/Recast",
        "description": "TODO",
        "label": "RecastCliffDirectional",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "RecastCracks": {
        "attributes": {
            "cut_max": {
                "description": "TODO",
                "key": "cut_max",
                "label": "cut_max",
                "type": "Float"
            },
            "cut_min": {
                "description": "TODO",
                "key": "cut_min",
                "label": "cut_min",
                "type": "Float"
            },
            "k_smoothing": {
                "description": "TODO",
                "key": "k_smoothing",
                "label": "k_smoothing",
                "type": "Float"
            }
        },
        "category": "Filter/Recast",
        "description": "TODO",
        "label": "RecastCracks",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "RecastSag": {
        "attributes": {
            "k": {
                "description": "TODO",
                "key": "k",
                "label": "k",
                "type": "Float"
            },
            "vref": {
                "description": "TODO",
                "key": "vref",
                "label": "vref",
                "type": "Float"
            }
        },
        "category": "Filter/Recast",
        "description": "RecastSag add cliffs in a heightmap by introducing sinks, droops, or bends downward changes in elevation.",
        "label": "RecastSag",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "Recurve": {
        "attributes": {
            "values": {
                "description": "TODO",
                "key": "values",
                "label": "values",
                "type": "Vector of floats"
            }
        },
        "category": "Filter/Recurve",
        "description": "TODO",
        "label": "Recurve",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "RecurveKura": {
        "attributes": {
            "a": {
                "description": "TODO",
                "key": "a",
                "label": "a",
                "type": "Float"
            },
            "b": {
                "description": "TODO",
                "key": "b",
                "label": "b",
                "type": "Float"
            }
        },
        "category": "Filter/Recurve",
        "description": "RecurveKura is an operator based on the Kumaraswamy distribution that can be used to adjust the amplitude levels of a dataset.",
        "label": "RecurveKura",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "RecurveS": {
        "category": "Filter/Recurve",
        "description": "RecurveS applied a curve adjustment filter using a smooth S-shape curve.",
        "label": "RecurveS",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "RelativeElevation": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Features/Landform",
        "description": "RelativeElevation identifies heightmap relative elevation based on the surrounding heightmap values.",
        "label": "RelativeElevation",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Relative elevation.",
                "type": "output"
            }
        }
    },
    "Remap": {
        "attributes": {
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "Remap range",
                "type": "Value range"
            }
        },
        "category": "Filter/Range",
        "description": "The Remap operator is used to adjust the elevation values across the entire dataset, effectively changing the range of elevation data to match a desired output scale or to normalize the data.",
        "label": "Remap",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Remapped heightmap.",
                "type": "output"
            }
        }
    },
    "Rescale": {
        "attributes": {
            "centered": {
                "description": "TODO",
                "key": "centered",
                "label": "centered",
                "type": "Bool"
            },
            "scaling": {
                "description": "TODO",
                "key": "scaling",
                "label": "scaling",
                "type": "Float"
            }
        },
        "category": "Filter/Range",
        "description": "The Rescale operator involves adjusting each data point by multiplying it with a predetermined constant.",
        "label": "Rescale",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Rescaled heightmap.",
                "type": "output"
            }
        }
    },
    "Reverse": {
        "category": "Math/Base",
        "description": "TODO",
        "label": "Reverse",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ReverseMidpoint": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "noise_scale": {
                "description": "TODO",
                "key": "noise_scale",
                "label": "noise_scale",
                "type": "Float"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "WIP",
        "description": "ReverseMidpoint generates an heightmap. It uses a polyline as a base, then recursively interpolate and displace midpoints to generate a terrain.",
        "label": "ReverseMidpoint",
        "ports": {
            "heightmap": {
                "caption": "heightmap",
                "data_type": "Heightmap",
                "description": "Interpolated heightmap.",
                "type": "output"
            },
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "Set of points (x, y) and elevations z.",
                "type": "input"
            }
        }
    },
    "Ridgelines": {
        "attributes": {
            "k_smoothing": {
                "description": "TODO",
                "key": "k_smoothing",
                "label": "k_smoothing",
                "type": "Float"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            },
            "vmin": {
                "description": "TODO",
                "key": "vmin",
                "label": "vmin",
                "type": "Float"
            },
            "width": {
                "description": "TODO",
                "key": "width",
                "label": "width",
                "type": "Float"
            }
        },
        "category": "Primitive/Authoring",
        "description": "Ridgelines generates an heightmap assuming the input path defines a ridgeline.",
        "label": "Ridgelines",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "heightmap": {
                "caption": "heightmap",
                "data_type": "Heightmap",
                "description": "Interpolated heightmap.",
                "type": "output"
            },
            "path": {
                "caption": "path",
                "data_type": "Path",
                "description": "Set of points (x, y) and elevations z.",
                "type": "input"
            }
        }
    },
    "Rift": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "sharp_bottom": {
                "description": "TODO",
                "key": "sharp_bottom",
                "label": "sharp_bottom",
                "type": "Bool"
            },
            "slope": {
                "description": "TODO",
                "key": "slope",
                "label": "slope",
                "type": "Float"
            },
            "width": {
                "description": "TODO",
                "key": "width",
                "label": "width",
                "type": "Float"
            }
        },
        "category": "Primitive/Function",
        "description": "Rift is function used to represent a conceptualized rift.",
        "label": "Rift",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the width parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Rift heightmap.",
                "type": "output"
            }
        }
    },
    "Ruggedness": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Features",
        "description": "TODO",
        "label": "Ruggedness",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Rugosity": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "clamp_max": {
                "description": "TODO",
                "key": "clamp_max",
                "label": "clamp_max",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "saturate": {
                "description": "TODO",
                "key": "saturate",
                "label": "saturate",
                "type": "Value range"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            },
            "vc_max": {
                "description": "TODO",
                "key": "vc_max",
                "label": "vc_max",
                "type": "Float"
            }
        },
        "category": "Features",
        "description": "Rugosity identifies heightmap rugosity, i.e. the roughness or irregularity of the surface.",
        "label": "Rugosity",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Rugosity.",
                "type": "output"
            }
        }
    },
    "Saturate": {
        "attributes": {
            "k_smoothing": {
                "description": "TODO",
                "key": "k_smoothing",
                "label": "k_smoothing",
                "type": "Float"
            },
            "range": {
                "description": "TODO",
                "key": "range",
                "label": "range",
                "type": "Value range"
            }
        },
        "category": "Filter/Recurve",
        "description": "Saturate limits the amplitude of a signal to a predefined range while keeping the initial input range.",
        "label": "Saturate",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Saturated heightmap.",
                "type": "output"
            }
        }
    },
    "ScanMask": {
        "attributes": {
            "brightness": {
                "description": "TODO",
                "key": "brightness",
                "label": "brightness",
                "type": "Float"
            },
            "contrast": {
                "description": "TODO",
                "key": "contrast",
                "label": "contrast",
                "type": "Float"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            }
        },
        "category": "Mask",
        "description": "ScanMask adjusts the brightness and contrast of an input mask.",
        "label": "ScanMask",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Adjusted heightmap.",
                "type": "output"
            }
        }
    },
    "SedimentDeposition": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "max_deposition": {
                "description": "TODO",
                "key": "max_deposition",
                "label": "max_deposition",
                "type": "Float"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            },
            "thermal_subiterations": {
                "description": "TODO",
                "key": "thermal_subiterations",
                "label": "thermal_subiterations",
                "type": "Integer"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "SedimentDeposition",
        "ports": {
            "deposition": {
                "caption": "deposition",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "SelectAngle": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "sigma": {
                "description": "TODO",
                "key": "sigma",
                "label": "sigma",
                "type": "Float"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectAngle is a thresholding operator. It selects angle values within a specified range defined by the shape of a Gaussian pulse.",
        "label": "SelectAngle",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectBlobLog": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectBlobLog performs 'blob' detection using oa Laplacian of Gaussian (log) method. Blobs are areas in an image that are either brighter or darker than the surrounding areas.",
        "label": "SelectBlobLog",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectCavities": {
        "attributes": {
            "concave": {
                "description": "TODO",
                "key": "concave",
                "label": "concave",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectCavities analyzes the curvature of an heightmap to identify concave or convex features such as valleys, depressions, ridges, or peaks.",
        "label": "SelectCavities",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectGt": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            },
            "value": {
                "description": "TODO",
                "key": "value",
                "label": "value",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectGt is a thresholding operator. It transforms an input heightmap into a binary heightmap, where each pixel is assigned either a value of 0 or 1, depending on whether its intensity value surpasses a specified threshold value.",
        "label": "SelectGt",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectInterval": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            },
            "value1": {
                "description": "TODO",
                "key": "value1",
                "label": "value1",
                "type": "Float"
            },
            "value2": {
                "description": "TODO",
                "key": "value2",
                "label": "value2",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectInterval is a thresholding operator. It transforms an input heightmap into a binary heightmap, where each pixel is assigned either a value of 0 or 1, depending on whether its intensity value is within an interval of values.",
        "label": "SelectInterval",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectInwardOutward": {
        "attributes": {
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectInwardOutward returns values > 0.5 if the slope is pointing to the center (slope is inward), and values < 0.5 otherwise (slope is outward).",
        "label": "SelectInwardOutward",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectMidrange": {
        "attributes": {
            "gain": {
                "description": "TODO",
                "key": "gain",
                "label": "gain",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "TODO",
        "label": "SelectMidrange",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "SelectMultiband3": {
        "attributes": {
            "overlap": {
                "description": "TODO",
                "key": "overlap",
                "label": "overlap",
                "type": "Float"
            },
            "ratio1": {
                "description": "TODO",
                "key": "ratio1",
                "label": "ratio1",
                "type": "Float"
            },
            "ratio2": {
                "description": "TODO",
                "key": "ratio2",
                "label": "ratio2",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "TODO",
        "label": "SelectMultiband3",
        "ports": {
            "high": {
                "caption": "high",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "low": {
                "caption": "low",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "mid": {
                "caption": "mid",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "SelectPulse": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "sigma": {
                "description": "TODO",
                "key": "sigma",
                "label": "sigma",
                "type": "Float"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            },
            "value": {
                "description": "TODO",
                "key": "value",
                "label": "value",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectPulse is a thresholding operator. It selects values within a specified range defined by the shape of a Gaussian pulse.",
        "label": "SelectPulse",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectRivers": {
        "attributes": {
            "clipping_ratio": {
                "description": "TODO",
                "key": "clipping_ratio",
                "label": "clipping_ratio",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            },
            "talus_ref": {
                "description": "TODO",
                "key": "talus_ref",
                "label": "talus_ref",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectRivers is a thresholding operator. It creates a mask for river systems based on a flow accumulation threshold.",
        "label": "SelectRivers",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectSlope": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "saturate": {
                "description": "TODO",
                "key": "saturate",
                "label": "saturate",
                "type": "Value range"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "TODO",
        "label": "SelectSlope",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "SelectTransitions": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "SelectTransitions returns a mask filled with 1 at the blending transition between two heightmaps, and 0 elsewhere.",
        "label": "SelectTransitions",
        "ports": {
            "blend": {
                "caption": "blend",
                "data_type": "Heightmap",
                "description": "Blended heightmap.",
                "type": "input"
            },
            "input 1": {
                "caption": "input 1",
                "data_type": "Heightmap",
                "description": "Input heightmap 1.",
                "type": "input"
            },
            "input 2": {
                "caption": "input 2",
                "data_type": "Heightmap",
                "description": "Input heightmap 2.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Mask heightmap (in [0, 1]).",
                "type": "output"
            }
        }
    },
    "SelectValley": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Mask/Selector",
        "description": "TODO",
        "label": "SelectValley",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "SetAlpha": {
        "attributes": {
            "alpha": {
                "description": "TODO",
                "key": "alpha",
                "label": "alpha",
                "type": "Float"
            },
            "clamp": {
                "description": "TODO",
                "key": "clamp",
                "label": "clamp",
                "type": "Bool"
            },
            "reverse": {
                "description": "TODO",
                "key": "reverse",
                "label": "reverse",
                "type": "Bool"
            }
        },
        "category": "Texture",
        "description": "SetAlpha adjusts the transparency of a texture based on an input alpha value, which can either be a single scalar or an array. When provided with a scalar alpha value, the function uniformly adjusts the transparency of the entire texture. Alternatively, when given an array of alpha values, it enables fine-grained control over the transparency of different parts of the texture, allowing for varied opacity across the texture's surface.",
        "label": "SetAlpha",
        "ports": {
            "alpha": {
                "caption": "alpha",
                "data_type": "Heightmap",
                "description": "Transparency (expected to be in [0, 1]).",
                "type": "input"
            },
            "noise": {
                "caption": "noise",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "texture in": {
                "caption": "texture in",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture out": {
                "caption": "texture out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ShapeIndex": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Filter/Smoothing",
        "description": "ShapeIndex is a measure used to quantify the shape complexity of landforms in an heightmap. It is calculated based on the second derivatives of the elevation surface. The surface index is greater than 0.5 for convex surface and lower than 0.5 for concave surface.",
        "label": "ShapeIndex",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Shape index.",
                "type": "output"
            }
        }
    },
    "SharpenCone": {
        "attributes": {
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "scale": {
                "description": "TODO",
                "key": "scale",
                "label": "scale",
                "type": "Float"
            }
        },
        "category": "Filter/Smoothing",
        "description": "SharpenCone is a cone kernel-based sharpen operator enhancing sharpness by emphasizing edges and fine details using a radial gradient shape.",
        "label": "SharpenCone",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "ShiftElevation": {
        "attributes": {
            "shift": {
                "description": "TODO",
                "key": "shift",
                "label": "shift",
                "type": "Float"
            }
        },
        "category": "Filter/Range",
        "description": "The ShiftElevation operator involves adjusting each data point by adding it with a predetermined constant.",
        "label": "ShiftElevation",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "Slope": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "Primitive/Function",
        "description": "Slope is function used to represent continuous terrain slope.",
        "label": "Slope",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Slope heightmap.",
                "type": "output"
            }
        }
    },
    "SmoothCpulse": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Filter/Smoothing",
        "description": "Smoothing using a cubic pulse kernel can be considered somewhat similar to Gaussian smoothing. This technique is used to reduce noise and smooth data. The cubic pulse kernel has a cubic decrease in influence with distance within a finite interval. It is zero beyond a certain radius, providing a compact support that affects only nearby points.",
        "label": "SmoothCpulse",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "SmoothFill": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "k": {
                "description": "TODO",
                "key": "k",
                "label": "k",
                "type": "Float"
            },
            "normalized_map": {
                "description": "TODO",
                "key": "normalized_map",
                "label": "normalized_map",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Filter/Smoothing",
        "description": "SmoothFill is a smoothing technique that takes the maximum between the input and the filtered field to simulate a sediment deposition effect.",
        "label": "SmoothFill",
        "ports": {
            "deposition": {
                "caption": "deposition",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "SmoothFillHoles": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Filter/Smoothing",
        "description": "SmoothFillHoles is a smoothing technique that restricts smoothing effect to convex regions.",
        "label": "SmoothFillHoles",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "SmoothFillSmearPeaks": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Filter/Smoothing",
        "description": "SmoothFillSmearPeaks is a smoothing technique that restricts smoothing effect to concave regions.",
        "label": "SmoothFillSmearPeaks",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "Smoothstep3": {
        "category": "Math/Base",
        "description": "Apply a 3rd-order smoothstep function to every values.",
        "label": "Smoothstep3",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "Smoothstep5": {
        "category": "Math/Base",
        "description": "Apply a 5th-order smoothstep function to every values.",
        "label": "Smoothstep5",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "Stamping": {
        "attributes": {
            "blend_method": {
                "description": "TODO",
                "key": "blend_method",
                "label": "blend_method",
                "type": "Enumeration"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "k_smoothing": {
                "description": "TODO",
                "key": "k_smoothing",
                "label": "k_smoothing",
                "type": "Float"
            },
            "kernel_flip": {
                "description": "TODO",
                "key": "kernel_flip",
                "label": "kernel_flip",
                "type": "Bool"
            },
            "kernel_radius": {
                "description": "TODO",
                "key": "kernel_radius",
                "label": "kernel_radius",
                "type": "Float"
            },
            "kernel_rotate": {
                "description": "TODO",
                "key": "kernel_rotate",
                "label": "kernel_rotate",
                "type": "Bool"
            },
            "kernel_scale_amplitude": {
                "description": "TODO",
                "key": "kernel_scale_amplitude",
                "label": "kernel_scale_amplitude",
                "type": "Bool"
            },
            "kernel_scale_radius": {
                "description": "TODO",
                "key": "kernel_scale_radius",
                "label": "kernel_scale_radius",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Primitive/Coherent",
        "description": "Stamping .",
        "label": "Stamping",
        "ports": {
            "cloud": {
                "caption": "cloud",
                "data_type": "Cloud",
                "description": "Stamping locations and intensities (as a Cloud).",
                "type": "input"
            },
            "kernel": {
                "caption": "kernel",
                "data_type": "Array",
                "description": "Kernel to be stamped.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Output heightmap.",
                "type": "output"
            }
        }
    },
    "SteepenConvective": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "dt": {
                "description": "TODO",
                "key": "dt",
                "label": "dt",
                "type": "Float"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            }
        },
        "category": "Filter/Recast",
        "description": "TODO",
        "label": "SteepenConvective",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Step": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "slope": {
                "description": "TODO",
                "key": "slope",
                "label": "slope",
                "type": "Float"
            }
        },
        "category": "Primitive/Function",
        "description": "Step is function used to represent a conceptualized escarpment, it serves as a tool for creating sharp, distinct changes in elevation.",
        "label": "Step",
        "ports": {
            "control": {
                "caption": "control",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Step heightmap.",
                "type": "output"
            }
        }
    },
    "Stratify": {
        "attributes": {
            "gamma": {
                "description": "TODO",
                "key": "gamma",
                "label": "gamma",
                "type": "Float"
            },
            "gamma_noise": {
                "description": "TODO",
                "key": "gamma_noise",
                "label": "gamma_noise",
                "type": "Float"
            },
            "n_strata": {
                "description": "TODO",
                "key": "n_strata",
                "label": "n_strata",
                "type": "Integer"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "strata_noise": {
                "description": "TODO",
                "key": "strata_noise",
                "label": "strata_noise",
                "type": "Float"
            }
        },
        "category": "Erosion/Stratify",
        "description": "Stratify adds horizontal stratifications to the input heightmap.",
        "label": "Stratify",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "noise": {
                "caption": "noise",
                "data_type": "Heightmap",
                "description": "Local elevation noise, value range expected to be scaled with the one of the input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Eroded heightmap.",
                "type": "output"
            }
        }
    },
    "StratifyMultiscale": {
        "attributes": {
            "gamma_list": {
                "description": "TODO",
                "key": "gamma_list",
                "label": "gamma_list",
                "type": "Vector of floats"
            },
            "gamma_noise": {
                "description": "TODO",
                "key": "gamma_noise",
                "label": "gamma_noise",
                "type": "Vector of floats"
            },
            "n_strata": {
                "description": "TODO",
                "key": "n_strata",
                "label": "n_strata",
                "type": "Vector of integers"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "strata_noise": {
                "description": "TODO",
                "key": "strata_noise",
                "label": "strata_noise",
                "type": "Vector of floats"
            }
        },
        "category": "Erosion/Stratify",
        "description": "TODO",
        "label": "StratifyMultiscale",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "noise": {
                "caption": "noise",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "StratifyOblique": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "gamma": {
                "description": "TODO",
                "key": "gamma",
                "label": "gamma",
                "type": "Float"
            },
            "gamma_noise": {
                "description": "TODO",
                "key": "gamma_noise",
                "label": "gamma_noise",
                "type": "Float"
            },
            "n_strata": {
                "description": "TODO",
                "key": "n_strata",
                "label": "n_strata",
                "type": "Integer"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "strata_noise": {
                "description": "TODO",
                "key": "strata_noise",
                "label": "strata_noise",
                "type": "Float"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "Erosion/Stratify",
        "description": "StratifyOblique adds oblique stratifications to the input heightmap.",
        "label": "StratifyOblique",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "noise": {
                "caption": "noise",
                "data_type": "Heightmap",
                "description": "Local elevation noise, value range expected to be scaled with the one of the input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Eroded heightmap.",
                "type": "output"
            }
        }
    },
    "Terrace": {
        "attributes": {
            "gain": {
                "description": "TODO",
                "key": "gain",
                "label": "gain",
                "type": "Float"
            },
            "nlevels": {
                "description": "TODO",
                "key": "nlevels",
                "label": "nlevels",
                "type": "Integer"
            },
            "noise_ratio": {
                "description": "TODO",
                "key": "noise_ratio",
                "label": "noise_ratio",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Filter/Recurve",
        "description": "TODO",
        "label": "Terrace",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "noise": {
                "caption": "noise",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "TextureQuiltingExpand": {
        "attributes": {
            "expansion_ratio": {
                "description": "TODO",
                "key": "expansion_ratio",
                "label": "expansion_ratio",
                "type": "Float"
            },
            "filter_width_ratio": {
                "description": "TODO",
                "key": "filter_width_ratio",
                "label": "filter_width_ratio",
                "type": "Float"
            },
            "overlap": {
                "description": "TODO",
                "key": "overlap",
                "label": "overlap",
                "type": "Float"
            },
            "patch_flip": {
                "description": "TODO",
                "key": "patch_flip",
                "label": "patch_flip",
                "type": "Bool"
            },
            "patch_rotate": {
                "description": "TODO",
                "key": "patch_rotate",
                "label": "patch_rotate",
                "type": "Bool"
            },
            "patch_transpose": {
                "description": "TODO",
                "key": "patch_transpose",
                "label": "patch_transpose",
                "type": "Bool"
            },
            "patch_width": {
                "description": "TODO",
                "key": "patch_width",
                "label": "patch_width",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Operator/Resynthesis",
        "description": "TODO",
        "label": "TextureQuiltingExpand",
        "ports": {
            "heightmap": {
                "caption": "heightmap",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "heightmap (guide)": {
                "caption": "heightmap (guide)",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "texture (guide)": {
                "caption": "texture (guide)",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture A": {
                "caption": "texture A",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture A out": {
                "caption": "texture A out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "texture B": {
                "caption": "texture B",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture B out": {
                "caption": "texture B out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "texture C": {
                "caption": "texture C",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture C out": {
                "caption": "texture C out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "texture D": {
                "caption": "texture D",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture D out": {
                "caption": "texture D out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "TextureQuiltingShuffle": {
        "attributes": {
            "filter_width_ratio": {
                "description": "TODO",
                "key": "filter_width_ratio",
                "label": "filter_width_ratio",
                "type": "Float"
            },
            "overlap": {
                "description": "TODO",
                "key": "overlap",
                "label": "overlap",
                "type": "Float"
            },
            "patch_flip": {
                "description": "TODO",
                "key": "patch_flip",
                "label": "patch_flip",
                "type": "Bool"
            },
            "patch_rotate": {
                "description": "TODO",
                "key": "patch_rotate",
                "label": "patch_rotate",
                "type": "Bool"
            },
            "patch_transpose": {
                "description": "TODO",
                "key": "patch_transpose",
                "label": "patch_transpose",
                "type": "Bool"
            },
            "patch_width": {
                "description": "TODO",
                "key": "patch_width",
                "label": "patch_width",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Operator/Resynthesis",
        "description": "TODO",
        "label": "TextureQuiltingShuffle",
        "ports": {
            "heightmap": {
                "caption": "heightmap",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "heightmap (guide)": {
                "caption": "heightmap (guide)",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "texture": {
                "caption": "texture",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "texture (guide)": {
                "caption": "texture (guide)",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture A": {
                "caption": "texture A",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture A out": {
                "caption": "texture A out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "texture B": {
                "caption": "texture B",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture B out": {
                "caption": "texture B out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "texture C": {
                "caption": "texture C",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture C out": {
                "caption": "texture C out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            },
            "texture D": {
                "caption": "texture D",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "input"
            },
            "texture D out": {
                "caption": "texture D out",
                "data_type": "HeightmapRGBA",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Thermal": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "Erosion/Thermal",
        "description": "Thermal is an erosion operator used to simulate the process of thermal erosion, which is a type of erosion that occurs due to temperature fluctuations causing the breakdown and movement of soil and rock materials.",
        "label": "Thermal",
        "ports": {
            "deposition": {
                "caption": "deposition",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Eroded heightmap.",
                "type": "output"
            }
        }
    },
    "ThermalAutoBedrock": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            },
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "Erosion/Thermal",
        "description": "TODO",
        "label": "ThermalAutoBedrock",
        "ports": {
            "deposition": {
                "caption": "deposition",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ThermalFlatten": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "ThermalFlatten",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ThermalInflate": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "Erosion/Thermal",
        "description": "TODO",
        "label": "ThermalInflate",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ThermalRib": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            }
        },
        "category": "WIP",
        "description": "ThermalRib performs thermal erosion using a 'rib' algorithm (taken from Geomorph)",
        "label": "ThermalRib",
        "ports": {
            "bedrock": {
                "caption": "bedrock",
                "data_type": "Heightmap",
                "description": "Bedrock elevation, erosion process cannot carve the heightmap further down this point.",
                "type": "input"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Eroded heightmap.",
                "type": "output"
            }
        }
    },
    "ThermalRidge": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Value range"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "Erosion/Thermal",
        "description": "TODO",
        "label": "ThermalRidge",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ThermalSchott": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "ThermalSchott",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ThermalScree": {
        "attributes": {
            "iterations": {
                "description": "TODO",
                "key": "iterations",
                "label": "iterations",
                "type": "Integer"
            },
            "scale_talus_with_elevation": {
                "description": "TODO",
                "key": "scale_talus_with_elevation",
                "label": "scale_talus_with_elevation",
                "type": "Bool"
            },
            "talus_constraint": {
                "description": "TODO",
                "key": "talus_constraint",
                "label": "talus_constraint",
                "type": "Bool"
            },
            "talus_global": {
                "description": "TODO",
                "key": "talus_global",
                "label": "talus_global",
                "type": "Float"
            },
            "zmax": {
                "description": "TODO",
                "key": "zmax",
                "label": "zmax",
                "type": "Float"
            }
        },
        "category": "Erosion/Thermal",
        "description": "TODO",
        "label": "ThermalScree",
        "ports": {
            "deposition": {
                "caption": "deposition",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            },
            "zmax": {
                "caption": "zmax",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            }
        }
    },
    "Translate": {
        "attributes": {
            "dx": {
                "description": "TODO",
                "key": "dx",
                "label": "dx",
                "type": "Float"
            },
            "dy": {
                "description": "TODO",
                "key": "dy",
                "label": "dy",
                "type": "Float"
            },
            "periodic": {
                "description": "TODO",
                "key": "periodic",
                "label": "periodic",
                "type": "Bool"
            }
        },
        "category": "Operator/Transform",
        "description": "Translates an heightmap by a specified amount along the x and y axes. This function shifts the contents of the input array by `dx` and `dy` units along the x and y axes, respectively. It supports both periodic boundary conditions, where the array wraps around, and non-periodic conditions.",
        "label": "Translate",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Translate heightmap.",
                "type": "output"
            }
        }
    },
    "Unsphericity": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "smoothing": {
                "description": "TODO",
                "key": "smoothing",
                "label": "smoothing",
                "type": "Bool"
            },
            "smoothing_radius": {
                "description": "TODO",
                "key": "smoothing_radius",
                "label": "smoothing_radius",
                "type": "Float"
            }
        },
        "category": "Features/Landform",
        "description": "Unsphericity is a measure used to quantify the deviation of the heightmap shape from a perfect sphere. In other words, it indicates how much the terrain differs from being perfectly round or spherical.",
        "label": "Unsphericity",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Shape index.",
                "type": "output"
            }
        }
    },
    "ValleyWidth": {
        "attributes": {
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Features/Landform",
        "description": "ValleyWidth identifies valley lines and measure the width of the valley at each cross-section.",
        "label": "ValleyWidth",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Valley width heightmap.",
                "type": "output"
            }
        }
    },
    "Voronoise": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "Wavenumber",
                "type": "Wavenumber"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "u": {
                "description": "TODO",
                "key": "u",
                "label": "u",
                "type": "Float"
            },
            "v": {
                "description": "TODO",
                "key": "v",
                "label": "v",
                "type": "Float"
            }
        },
        "category": "Primitive/Coherent",
        "description": "TODO",
        "label": "Voronoise",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "Warp": {
        "attributes": {
            "GPU": {
                "description": "TODO",
                "key": "GPU",
                "label": "GPU",
                "type": "Bool"
            }
        },
        "category": "Operator/Transform",
        "description": "The Warp node transforms a base heightmap by warping/pushing pixels as defined by the input displacements.",
        "label": "Warp",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Warped heightmap.",
                "type": "output"
            }
        }
    },
    "WarpDownslope": {
        "attributes": {
            "amount": {
                "description": "TODO",
                "key": "amount",
                "label": "amount",
                "type": "Float"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "reverse": {
                "description": "TODO",
                "key": "reverse",
                "label": "reverse",
                "type": "Bool"
            }
        },
        "category": "WIP",
        "description": "Warp the heightmap with a direction and amount based on the local downslope.",
        "label": "WarpDownslope",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "Mask defining the filtering intensity (expected in [0, 1]).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "WaveDune": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "kw",
                "type": "Float"
            },
            "phase_shift": {
                "description": "TODO",
                "key": "phase_shift",
                "label": "phase_shift",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "xbottom": {
                "description": "TODO",
                "key": "xbottom",
                "label": "xbottom",
                "type": "Float"
            },
            "xtop": {
                "description": "TODO",
                "key": "xtop",
                "label": "xtop",
                "type": "Float"
            }
        },
        "category": "Primitive/Function",
        "description": "WaveDune mimics using a periodic function the formation and spatial distribution of transverse sand dunes on a terrain.",
        "label": "WaveDune",
        "ports": {
            "dr": {
                "caption": "dr",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (normal direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "WaveDune heightmap.",
                "type": "output"
            }
        }
    },
    "WaveSine": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "kw",
                "type": "Float"
            },
            "phase_shift": {
                "description": "TODO",
                "key": "phase_shift",
                "label": "phase_shift",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Primitive/Function",
        "description": "WaveSine generates sine waves.",
        "label": "WaveSine",
        "ports": {
            "dr": {
                "caption": "dr",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (normal direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "WaveSine heightmap.",
                "type": "output"
            }
        }
    },
    "WaveSquare": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "kw",
                "type": "Float"
            },
            "phase_shift": {
                "description": "TODO",
                "key": "phase_shift",
                "label": "phase_shift",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            }
        },
        "category": "Primitive/Function",
        "description": "WaveSquare generates square waves.",
        "label": "WaveSquare",
        "ports": {
            "dr": {
                "caption": "dr",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (normal direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "WaveSquare heightmap.",
                "type": "output"
            }
        }
    },
    "WaveTriangular": {
        "attributes": {
            "angle": {
                "description": "TODO",
                "key": "angle",
                "label": "angle",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "kw",
                "type": "Float"
            },
            "phase_shift": {
                "description": "TODO",
                "key": "phase_shift",
                "label": "phase_shift",
                "type": "Float"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "slant_ratio": {
                "description": "TODO",
                "key": "slant_ratio",
                "label": "slant_ratio",
                "type": "Float"
            }
        },
        "category": "Primitive/Function",
        "description": "WaveTriangular generates triangular waves.",
        "label": "WaveTriangular",
        "ports": {
            "dr": {
                "caption": "dr",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (normal direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "WaveTriangular heightmap.",
                "type": "output"
            }
        }
    },
    "White": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Primitive/Random",
        "description": "White noise operator generates a random signal with a flat power spectral density.",
        "label": "White",
        "ports": {
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "WhiteDensityMap": {
        "attributes": {
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Primitive/Random",
        "description": "WhiteDensityMap noise operator generates a random signal with a flat power and a spatial density defined by an input heightmap.",
        "label": "WhiteDensityMap",
        "ports": {
            "density": {
                "caption": "density",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "WhiteSparse": {
        "attributes": {
            "density": {
                "description": "TODO",
                "key": "density",
                "label": "density",
                "type": "Float"
            },
            "inverse": {
                "description": "TODO",
                "key": "inverse",
                "label": "inverse",
                "type": "Bool"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            }
        },
        "category": "Primitive/Random",
        "description": "WhiteSparse noise operator generates a random signal with a flat power spectral density, but with a sparse spatial density.",
        "label": "WhiteSparse",
        "ports": {
            "envelope": {
                "caption": "envelope",
                "data_type": "Heightmap",
                "description": "Output noise amplitude envelope.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Generated noise.",
                "type": "output"
            }
        }
    },
    "Wrinkle": {
        "attributes": {
            "displacement_amplitude": {
                "description": "TODO",
                "key": "displacement_amplitude",
                "label": "displacement_amplitude",
                "type": "Float"
            },
            "kw": {
                "description": "TODO",
                "key": "kw",
                "label": "kw",
                "type": "Float"
            },
            "octaves": {
                "description": "TODO",
                "key": "octaves",
                "label": "Octaves",
                "type": "Integer"
            },
            "radius": {
                "description": "TODO",
                "key": "radius",
                "label": "radius",
                "type": "Float"
            },
            "seed": {
                "description": "TODO",
                "key": "seed",
                "label": "Seed",
                "type": "Random seed number"
            },
            "weight": {
                "description": "TODO",
                "key": "weight",
                "label": "Weight",
                "type": "Float"
            },
            "wrinkle_amplitude": {
                "description": "TODO",
                "key": "wrinkle_amplitude",
                "label": "wrinkle_amplitude",
                "type": "Float"
            },
            "wrinkle_angle": {
                "description": "TODO",
                "key": "wrinkle_angle",
                "label": "wrinkle_angle",
                "type": "Float"
            }
        },
        "category": "WIP",
        "description": "TODO",
        "label": "Wrinkle",
        "ports": {
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "mask": {
                "caption": "mask",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "TODO",
                "type": "output"
            }
        }
    },
    "ZeroedEdges": {
        "attributes": {
            "distance_function": {
                "description": "TODO",
                "key": "distance_function",
                "label": "distance_function",
                "type": "Enumeration"
            },
            "remap_range": {
                "description": "TODO",
                "key": "remap_range",
                "label": "remap_range",
                "type": "Value range"
            },
            "sigma": {
                "description": "TODO",
                "key": "sigma",
                "label": "sigma",
                "type": "Float"
            }
        },
        "category": "Primitive/Random",
        "description": "ZeroedEdges is an operator that enforces values close to zero at the domain edges.",
        "label": "ZeroedEdges",
        "ports": {
            "dr": {
                "caption": "dr",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (radial direction).",
                "type": "input"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Input heightmap.",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Filtered heightmap.",
                "type": "output"
            }
        }
    },
    "Zoom": {
        "attributes": {
            "center": {
                "description": "TODO",
                "key": "center",
                "label": "center",
                "type": "Vec2Float"
            },
            "periodic": {
                "description": "TODO",
                "key": "periodic",
                "label": "periodic",
                "type": "Bool"
            },
            "remap": {
                "description": "TODO",
                "key": "remap",
                "label": "remap",
                "type": "Bool"
            },
            "zoom_factor": {
                "description": "TODO",
                "key": "zoom_factor",
                "label": "zoom_factor",
                "type": "Float"
            }
        },
        "category": "Operator/Transform",
        "description": "Applies a zoom effect to an heightmap with an adjustable center. This function scales the input 2D array by a specified zoom factor, effectively resizing the array's contents. The zoom operation is centered around a specified point within the array, allowing for flexible zooming behavior.",
        "label": "Zoom",
        "ports": {
            "dx": {
                "caption": "dx",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (y-direction).",
                "type": "input"
            },
            "dy": {
                "caption": "dy",
                "data_type": "Heightmap",
                "description": "Control parameter, acts as a multiplier for the weight parameter.",
                "type": "input"
            },
            "input": {
                "caption": "input",
                "data_type": "Heightmap",
                "description": "Displacement with respect to the domain size (x-direction).",
                "type": "input"
            },
            "output": {
                "caption": "output",
                "data_type": "Heightmap",
                "description": "Zoom heightmap.",
                "type": "output"
            }
        }
    }
}
